{"ast":null,"code":"var _jsxFileName = \"/Users/abdulazizgossage/StudioProjects/spin and earn/admin/src/pages/Config.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { configApi } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONFIG_SECTIONS = [{\n  key: 'rewards',\n  title: 'Rewards Configuration',\n  description: 'Configure game rewards, jackpots, and bonuses',\n  isPublic: true,\n  fields: [{\n    key: 'spin.base',\n    label: 'Base Spin Reward',\n    type: 'number',\n    description: 'Base coins per spin',\n    min: 1,\n    max: 100,\n    defaultValue: 1,\n    required: true,\n    warning: 'Higher values increase user satisfaction but reduce profitability'\n  }, {\n    key: 'spin.min',\n    label: 'Minimum Spin Reward',\n    type: 'number',\n    description: 'Minimum coins per spin',\n    min: 1,\n    max: 50,\n    defaultValue: 1,\n    required: true,\n    warning: 'Should be lower than or equal to base reward'\n  }, {\n    key: 'spin.max',\n    label: 'Maximum Spin Reward',\n    type: 'number',\n    description: 'Maximum coins per spin',\n    min: 10,\n    max: 1000,\n    defaultValue: 100,\n    required: true,\n    warning: 'Higher values increase excitement but reduce profitability'\n  }, {\n    key: 'jackpot',\n    label: 'Jackpot Reward',\n    type: 'number',\n    description: 'Jackpot coins amount',\n    min: 100,\n    max: 10000,\n    defaultValue: 100,\n    required: true,\n    warning: 'Very high values can be expensive but increase user engagement'\n  }, {\n    key: 'referral.inviter',\n    label: 'Referrer Bonus',\n    type: 'number',\n    description: 'Coins for referring someone',\n    min: 10,\n    max: 500,\n    defaultValue: 50,\n    required: true,\n    warning: 'Encourages user referrals'\n  }, {\n    key: 'referral.invitee',\n    label: 'Invitee Bonus',\n    type: 'number',\n    description: 'Coins for being referred',\n    min: 10,\n    max: 500,\n    defaultValue: 25,\n    required: true,\n    warning: 'Encourages new user signups'\n  }, {\n    key: 'referral.qualifyAfterCoins',\n    label: 'Qualify After Coins',\n    type: 'number',\n    description: 'Coins needed to qualify for referrals',\n    min: 50,\n    max: 1000,\n    defaultValue: 100,\n    required: true,\n    warning: 'Prevents abuse of referral system'\n  }]\n}, {\n  key: 'streaks',\n  title: 'Streak Bonuses',\n  description: 'Configure daily streak rewards and multipliers',\n  isPublic: true,\n  fields: [{\n    key: 'bonusMultiplier',\n    label: 'Streak Bonus Multiplier',\n    type: 'number',\n    description: 'Multiplier for streak bonuses',\n    min: 1,\n    max: 5,\n    step: 0.1,\n    defaultValue: 1.5,\n    required: true,\n    warning: 'Higher values encourage daily engagement'\n  }, {\n    key: 'maxStreakDays',\n    label: 'Maximum Streak Days',\n    type: 'number',\n    description: 'Maximum days for streak bonus',\n    min: 7,\n    max: 365,\n    defaultValue: 7,\n    required: true,\n    warning: 'Longer streaks increase retention but cost more'\n  }, {\n    key: 'day1Bonus',\n    label: 'Day 1 Bonus',\n    type: 'number',\n    description: 'Bonus coins for 1 day streak',\n    min: 0,\n    max: 100,\n    defaultValue: 10,\n    required: true\n  }, {\n    key: 'day3Bonus',\n    label: 'Day 3 Bonus',\n    type: 'number',\n    description: 'Bonus coins for 3 day streak',\n    min: 0,\n    max: 200,\n    defaultValue: 25,\n    required: true\n  }, {\n    key: 'day7Bonus',\n    label: 'Day 7 Bonus',\n    type: 'number',\n    description: 'Bonus coins for 7 day streak',\n    min: 0,\n    max: 500,\n    defaultValue: 100,\n    required: true\n  }, {\n    key: 'day30Bonus',\n    label: 'Day 30 Bonus',\n    type: 'number',\n    description: 'Bonus coins for 30 day streak',\n    min: 0,\n    max: 2000,\n    defaultValue: 500,\n    required: true,\n    warning: 'High value - consider carefully'\n  }]\n}, {\n  key: 'caps',\n  title: 'Daily Limits & Caps',\n  description: 'Configure daily limits and restrictions',\n  isPublic: true,\n  fields: [{\n    key: 'maxSpinsPerDay',\n    label: 'Max Spins Per Day',\n    type: 'number',\n    description: 'Maximum spins allowed per day',\n    min: 5,\n    max: 200,\n    defaultValue: 50,\n    required: true,\n    warning: 'Lower values reduce costs but may frustrate users'\n  }, {\n    key: 'minSecondsBetweenSpins',\n    label: 'Min Seconds Between Spins',\n    type: 'number',\n    description: 'Minimum time between spins',\n    min: 5,\n    max: 300,\n    defaultValue: 30,\n    required: true,\n    warning: 'Prevents rapid spinning abuse'\n  }, {\n    key: 'maxRewardedPerDay',\n    label: 'Max Rewarded Spins Per Day',\n    type: 'number',\n    description: 'Maximum rewarded spins per day',\n    min: 5,\n    max: 100,\n    defaultValue: 20,\n    required: true,\n    warning: 'Controls daily reward costs'\n  }, {\n    key: 'dailyCoinCap',\n    label: 'Daily Coin Cap',\n    type: 'number',\n    description: 'Maximum coins earned per day',\n    min: 100,\n    max: 5000,\n    defaultValue: 500,\n    required: true,\n    warning: 'Major cost control - set carefully'\n  }]\n}, {\n  key: 'wheelWeights',\n  title: 'Spin Wheel Weights',\n  description: 'Configure probability weights for spin wheel outcomes',\n  isPublic: false,\n  fields: [{\n    key: '2',\n    label: '2 Coins Weight',\n    type: 'number',\n    description: 'Probability weight for 2 coins',\n    min: 1,\n    max: 100,\n    defaultValue: 30,\n    required: true,\n    warning: 'Higher weight = more frequent occurrence'\n  }, {\n    key: '5',\n    label: '5 Coins Weight',\n    type: 'number',\n    description: 'Probability weight for 5 coins',\n    min: 1,\n    max: 100,\n    defaultValue: 25,\n    required: true\n  }, {\n    key: '10',\n    label: '10 Coins Weight',\n    type: 'number',\n    description: 'Probability weight for 10 coins',\n    min: 1,\n    max: 100,\n    defaultValue: 20,\n    required: true\n  }, {\n    key: '20',\n    label: '20 Coins Weight',\n    type: 'number',\n    description: 'Probability weight for 20 coins',\n    min: 1,\n    max: 100,\n    defaultValue: 15,\n    required: true\n  }, {\n    key: '50',\n    label: '50 Coins Weight',\n    type: 'number',\n    description: 'Probability weight for 50 coins',\n    min: 1,\n    max: 100,\n    defaultValue: 7,\n    required: true\n  }, {\n    key: 'jackpot',\n    label: 'Jackpot Weight',\n    type: 'number',\n    description: 'Probability weight for jackpot',\n    min: 1,\n    max: 10,\n    defaultValue: 1,\n    required: true,\n    warning: 'Very low weight - jackpots should be rare'\n  }, {\n    key: 'bonusSpin',\n    label: 'Bonus Spin Weight',\n    type: 'number',\n    description: 'Probability weight for bonus spin',\n    min: 1,\n    max: 10,\n    defaultValue: 1,\n    required: true\n  }, {\n    key: 'tryAgain',\n    label: 'Try Again Weight',\n    type: 'number',\n    description: 'Probability weight for try again',\n    min: 1,\n    max: 10,\n    defaultValue: 1,\n    required: true\n  }]\n}, {\n  key: 'withdrawals',\n  title: 'Withdrawal Settings',\n  description: 'Configure withdrawal limits and fees',\n  isPublic: true,\n  fields: [{\n    key: 'min',\n    label: 'Minimum Withdrawal',\n    type: 'number',\n    description: 'Minimum coins for withdrawal',\n    min: 100,\n    max: 10000,\n    defaultValue: 1000,\n    required: true,\n    warning: 'Higher values reduce processing costs but may frustrate users'\n  }, {\n    key: 'fee',\n    label: 'Withdrawal Fee (%)',\n    type: 'number',\n    description: 'Percentage fee for withdrawals',\n    min: 0,\n    max: 20,\n    step: 0.1,\n    defaultValue: 5,\n    required: true,\n    warning: 'Higher fees increase revenue but may discourage withdrawals'\n  }, {\n    key: 'cooldownHours',\n    label: 'Cooldown Hours',\n    type: 'number',\n    description: 'Hours between withdrawals',\n    min: 0,\n    max: 168,\n    defaultValue: 24,\n    required: true,\n    warning: 'Prevents rapid withdrawal abuse'\n  }, {\n    key: 'maxPerDay',\n    label: 'Max Withdrawals Per Day',\n    type: 'number',\n    description: 'Maximum withdrawal requests per day',\n    min: 1,\n    max: 10,\n    defaultValue: 3,\n    required: true\n  }, {\n    key: 'autoApproveLimit',\n    label: 'Auto-Approve Limit',\n    type: 'number',\n    description: 'Auto-approve withdrawals under this amount',\n    min: 0,\n    max: 1000,\n    defaultValue: 100,\n    required: true,\n    warning: 'Reduces admin workload but may increase fraud risk'\n  }]\n}, {\n  key: 'security',\n  title: 'Security Settings',\n  description: 'Configure anti-fraud and security measures',\n  isPublic: false,\n  fields: [{\n    key: 'allowEmulators',\n    label: 'Allow Emulators',\n    type: 'boolean',\n    description: 'Allow users on emulators',\n    defaultValue: false,\n    required: true,\n    warning: 'Emulators are often used for fraud'\n  }, {\n    key: 'rootedPenalty',\n    label: 'Rooted Device Penalty',\n    type: 'number',\n    description: 'Reward multiplier for rooted devices',\n    min: 0,\n    max: 1,\n    step: 0.1,\n    defaultValue: 0.5,\n    required: true,\n    warning: 'Rooted devices are higher risk'\n  }, {\n    key: 'ipVelocityWindowSec',\n    label: 'IP Velocity Window (sec)',\n    type: 'number',\n    description: 'Time window for IP velocity checks',\n    min: 300,\n    max: 86400,\n    defaultValue: 3600,\n    required: true\n  }, {\n    key: 'maxActionsPerWindow',\n    label: 'Max Actions Per Window',\n    type: 'number',\n    description: 'Maximum actions per time window',\n    min: 10,\n    max: 1000,\n    defaultValue: 100,\n    required: true\n  }, {\n    key: 'maxDevicesPerUser',\n    label: 'Max Devices Per User',\n    type: 'number',\n    description: 'Maximum devices per user account',\n    min: 1,\n    max: 10,\n    defaultValue: 3,\n    required: true\n  }, {\n    key: 'suspiciousIpThreshold',\n    label: 'Suspicious IP Threshold',\n    type: 'number',\n    description: 'Actions per IP before flagging',\n    min: 5,\n    max: 100,\n    defaultValue: 10,\n    required: true\n  }]\n}, {\n  key: 'email',\n  title: 'Email Settings',\n  description: 'Configure email notifications and magic links',\n  isPublic: false,\n  fields: [{\n    key: 'enabled',\n    label: 'Enable Email Features',\n    type: 'boolean',\n    description: 'Enable email notifications and magic links',\n    defaultValue: false,\n    required: true\n  }, {\n    key: 'smtpHost',\n    label: 'SMTP Host',\n    type: 'text',\n    description: 'SMTP server hostname',\n    defaultValue: 'smtp.gmail.com',\n    required: true\n  }, {\n    key: 'smtpPort',\n    label: 'SMTP Port',\n    type: 'number',\n    description: 'SMTP server port',\n    min: 1,\n    max: 65535,\n    defaultValue: 587,\n    required: true\n  }, {\n    key: 'smtpUser',\n    label: 'SMTP Username',\n    type: 'text',\n    description: 'SMTP authentication username',\n    defaultValue: '',\n    required: false\n  }, {\n    key: 'smtpPass',\n    label: 'SMTP Password',\n    type: 'text',\n    description: 'SMTP authentication password',\n    defaultValue: '',\n    required: false,\n    warning: 'Store securely - consider using environment variables'\n  }, {\n    key: 'fromEmail',\n    label: 'From Email',\n    type: 'text',\n    description: 'Sender email address',\n    defaultValue: 'noreply@spinearn.com',\n    required: true\n  }, {\n    key: 'fromName',\n    label: 'From Name',\n    type: 'text',\n    description: 'Sender display name',\n    defaultValue: 'Spin & Earn',\n    required: true\n  }]\n}, {\n  key: 'app',\n  title: 'App Settings',\n  description: 'Configure app-wide settings and features',\n  isPublic: true,\n  fields: [{\n    key: 'maintenanceMode',\n    label: 'Maintenance Mode',\n    type: 'boolean',\n    description: 'Enable maintenance mode',\n    defaultValue: false,\n    required: true,\n    warning: 'Will disable app access for users'\n  }, {\n    key: 'maintenanceMessage',\n    label: 'Maintenance Message',\n    type: 'text',\n    description: 'Message shown during maintenance',\n    defaultValue: 'We are currently performing maintenance. Please try again later.',\n    required: true\n  }, {\n    key: 'appVersion',\n    label: 'App Version',\n    type: 'text',\n    description: 'Current app version',\n    defaultValue: '1.0.0',\n    required: true\n  }, {\n    key: 'minAppVersion',\n    label: 'Minimum App Version',\n    type: 'text',\n    description: 'Minimum required app version',\n    defaultValue: '1.0.0',\n    required: true\n  }, {\n    key: 'forceUpdate',\n    label: 'Force Update',\n    type: 'boolean',\n    description: 'Force users to update app',\n    defaultValue: false,\n    required: true,\n    warning: 'Will prevent users from using older app versions'\n  }, {\n    key: 'updateMessage',\n    label: 'Update Message',\n    type: 'text',\n    description: 'Message shown for forced updates',\n    defaultValue: 'Please update to the latest version to continue using the app.',\n    required: true\n  }]\n}];\nconst Config = () => {\n  _s();\n  const [configs, setConfigs] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState({});\n  const [errors, setErrors] = useState({});\n  const [fieldErrors, setFieldErrors] = useState({});\n  const [warnings, setWarnings] = useState({});\n  useEffect(() => {\n    loadConfigs();\n  }, []);\n  const loadConfigs = async () => {\n    try {\n      setLoading(true);\n      const configPromises = CONFIG_SECTIONS.map(section => configApi.getConfig(section.key).catch(() => ({\n        value: {}\n      })));\n      const results = await Promise.all(configPromises);\n      const configData = {};\n      CONFIG_SECTIONS.forEach((section, index) => {\n        var _results$index;\n        const result = ((_results$index = results[index]) === null || _results$index === void 0 ? void 0 : _results$index.value) || {};\n        // Merge with defaults\n        const mergedConfig = {\n          ...result\n        };\n        section.fields.forEach(field => {\n          if (mergedConfig[field.key] === undefined && field.defaultValue !== undefined) {\n            if (field.key.includes('.')) {\n              const [parentKey, childKey] = field.key.split('.');\n              if (!mergedConfig[parentKey]) mergedConfig[parentKey] = {};\n              mergedConfig[parentKey][childKey] = field.defaultValue;\n            } else {\n              mergedConfig[field.key] = field.defaultValue;\n            }\n          }\n        });\n        configData[section.key] = mergedConfig;\n      });\n      setConfigs(configData);\n    } catch (error) {\n      console.error('Error loading configs:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const validateField = (sectionKey, fieldKey, value, field) => {\n    if (field.required && (value === undefined || value === null || value === '')) {\n      return 'This field is required';\n    }\n    if (field.type === 'number' && value !== undefined && value !== null && value !== '') {\n      const numValue = parseFloat(value);\n      if (isNaN(numValue)) {\n        return 'Must be a valid number';\n      }\n      if (field.min !== undefined && numValue < field.min) {\n        return `Minimum value is ${field.min}`;\n      }\n      if (field.max !== undefined && numValue > field.max) {\n        return `Maximum value is ${field.max}`;\n      }\n    }\n    return '';\n  };\n  const updateConfigValue = (sectionKey, fieldKey, value) => {\n    // Clear field error when user starts typing\n    setFieldErrors(prev => ({\n      ...prev,\n      [sectionKey]: {\n        ...prev[sectionKey],\n        [fieldKey]: ''\n      }\n    }));\n    setConfigs(prev => {\n      const currentSection = prev[sectionKey] || {};\n\n      // Handle nested field keys like 'spin.base' or 'referral.inviter'\n      if (fieldKey.includes('.')) {\n        const [parentKey, childKey] = fieldKey.split('.');\n        return {\n          ...prev,\n          [sectionKey]: {\n            ...currentSection,\n            [parentKey]: {\n              ...currentSection[parentKey],\n              [childKey]: value\n            }\n          }\n        };\n      } else {\n        return {\n          ...prev,\n          [sectionKey]: {\n            ...currentSection,\n            [fieldKey]: value\n          }\n        };\n      }\n    });\n  };\n  const saveConfig = async sectionKey => {\n    try {\n      // Validate all fields in the section\n      const section = CONFIG_SECTIONS.find(s => s.key === sectionKey);\n      if (!section) return;\n      const sectionErrors = {};\n      let hasErrors = false;\n      section.fields.forEach(field => {\n        const error = validateField(sectionKey, field.key, getFieldValue(sectionKey, field.key), field);\n        if (error) {\n          sectionErrors[field.key] = error;\n          hasErrors = true;\n        }\n      });\n      if (hasErrors) {\n        setFieldErrors(prev => ({\n          ...prev,\n          [sectionKey]: sectionErrors\n        }));\n        return;\n      }\n      setSaving(prev => ({\n        ...prev,\n        [sectionKey]: true\n      }));\n      setErrors(prev => ({\n        ...prev,\n        [sectionKey]: ''\n      }));\n      await configApi.updateConfig(sectionKey, configs[sectionKey]);\n\n      // Show success message\n      alert(`${section.title} updated successfully!`);\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error('Error saving config:', error);\n      let errorMessage = 'Failed to save configuration. Please try again.';\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 429) {\n        errorMessage = 'Too many requests. Please wait a moment and try again.';\n      } else if ((_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && _error$response2$data.error) {\n        errorMessage = error.response.data.error;\n      }\n      setErrors(prev => ({\n        ...prev,\n        [sectionKey]: errorMessage\n      }));\n    } finally {\n      setSaving(prev => ({\n        ...prev,\n        [sectionKey]: false\n      }));\n    }\n  };\n  const getFieldValue = (sectionKey, fieldKey) => {\n    if (fieldKey.includes('.')) {\n      var _configs$sectionKey, _configs$sectionKey$p;\n      const [parentKey, childKey] = fieldKey.split('.');\n      return (_configs$sectionKey = configs[sectionKey]) === null || _configs$sectionKey === void 0 ? void 0 : (_configs$sectionKey$p = _configs$sectionKey[parentKey]) === null || _configs$sectionKey$p === void 0 ? void 0 : _configs$sectionKey$p[childKey];\n    } else {\n      var _configs$sectionKey2;\n      return (_configs$sectionKey2 = configs[sectionKey]) === null || _configs$sectionKey2 === void 0 ? void 0 : _configs$sectionKey2[fieldKey];\n    }\n  };\n  const renderField = (sectionKey, field) => {\n    var _fieldErrors$sectionK;\n    const value = getFieldValue(sectionKey, field.key);\n    const error = (_fieldErrors$sectionK = fieldErrors[sectionKey]) === null || _fieldErrors$sectionK === void 0 ? void 0 : _fieldErrors$sectionK[field.key];\n    const warning = field.warning;\n    switch (field.type) {\n      case 'number':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: value || '',\n            onChange: e => updateConfigValue(sectionKey, field.key, parseFloat(e.target.value) || 0),\n            min: field.min,\n            max: field.max,\n            step: field.step || 1,\n            className: `w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${error ? 'border-red-500' : 'border-gray-300'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-red-600\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 772,\n            columnNumber: 15\n          }, this), warning && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-yellow-600\",\n            children: warning\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 775,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 11\n        }, this);\n      case 'boolean':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: (value === null || value === void 0 ? void 0 : value.toString()) || 'false',\n            onChange: e => updateConfigValue(sectionKey, field.key, e.target.value === 'true'),\n            className: `w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${error ? 'border-red-500' : 'border-gray-300'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"true\",\n              children: \"Enabled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 790,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"false\",\n              children: \"Disabled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 791,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 783,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-red-600\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 794,\n            columnNumber: 15\n          }, this), warning && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-yellow-600\",\n            children: warning\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: value || '',\n            onChange: e => updateConfigValue(sectionKey, field.key, e.target.value),\n            className: `w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${error ? 'border-red-500' : 'border-gray-300'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 805,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-red-600\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 15\n          }, this), warning && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-yellow-600\",\n            children: warning\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 817,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-64\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 827,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 826,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-3xl font-bold text-gray-900 mb-2\",\n            children: \"Configuration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: \"Manage game settings, rewards, and security configurations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: loadConfigs,\n            disabled: loading,\n            className: \"px-4 py-2 bg-gray-500 text-white rounded-md hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed\",\n            children: \"Reload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 841,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (confirm('Are you sure you want to reset all configurations to default values? This action cannot be undone.')) {\n                loadConfigs();\n              }\n            },\n            disabled: loading,\n            className: \"px-4 py-2 bg-orange-500 text-white rounded-md hover:bg-orange-600 disabled:opacity-50 disabled:cursor-not-allowed\",\n            children: \"Reset to Defaults\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 848,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 9\n      }, this), errors.all && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\",\n        children: errors.all\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 834,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-6\",\n      children: CONFIG_SECTIONS.map(section => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold text-gray-900\",\n              children: section.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 874,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600 text-sm\",\n              children: section.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 875,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `inline-block px-2 py-1 text-xs rounded-full mt-2 ${section.isPublic ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`,\n              children: section.isPublic ? 'Public' : 'Private'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 876,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 873,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => saveConfig(section.key),\n            disabled: saving[section.key],\n            className: \"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed\",\n            children: saving[section.key] ? 'Saving...' : 'Save Changes'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 884,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 13\n        }, this), errors[section.key] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\",\n          children: errors[section.key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 894,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n          children: section.fields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700\",\n              children: [field.label, field.required && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-red-500 ml-1\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 904,\n                columnNumber: 40\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 902,\n              columnNumber: 19\n            }, this), renderField(section.key, field), field.description && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-500\",\n              children: field.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 908,\n              columnNumber: 21\n            }, this)]\n          }, field.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 901,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 899,\n          columnNumber: 13\n        }, this)]\n      }, section.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 871,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 869,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 p-4 bg-blue-50 border border-blue-200 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-blue-900 mb-2\",\n        children: \"Configuration Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 918,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"text-sm text-blue-800 space-y-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Public\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 920,\n            columnNumber: 17\n          }, this), \" configurations are visible to users and affect game behavior\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 920,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Private\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 921,\n            columnNumber: 17\n          }, this), \" configurations are for internal use and security\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 921,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2022 Changes take effect immediately after saving\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2022 Be careful with security settings to prevent abuse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 923,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2022 Wheel weights determine the probability of each spin outcome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\u2022 Fields marked with \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-red-500\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 925,\n            columnNumber: 36\n          }, this), \" are required\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2022 Yellow warnings indicate important considerations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 919,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 917,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 833,\n    columnNumber: 5\n  }, this);\n};\n_s(Config, \"61Sn71JulnqrCJDQpWVfln9OhPk=\");\n_c = Config;\nexport default Config;\nvar _c;\n$RefreshReg$(_c, \"Config\");","map":{"version":3,"names":["React","useState","useEffect","configApi","jsxDEV","_jsxDEV","CONFIG_SECTIONS","key","title","description","isPublic","fields","label","type","min","max","defaultValue","required","warning","step","Config","_s","configs","setConfigs","loading","setLoading","saving","setSaving","errors","setErrors","fieldErrors","setFieldErrors","warnings","setWarnings","loadConfigs","configPromises","map","section","getConfig","catch","value","results","Promise","all","configData","forEach","index","_results$index","result","mergedConfig","field","undefined","includes","parentKey","childKey","split","error","console","validateField","sectionKey","fieldKey","numValue","parseFloat","isNaN","updateConfigValue","prev","currentSection","saveConfig","find","s","sectionErrors","hasErrors","getFieldValue","updateConfig","alert","_error$response","_error$response2","_error$response2$data","errorMessage","response","status","data","_configs$sectionKey","_configs$sectionKey$p","_configs$sectionKey2","renderField","_fieldErrors$sectionK","className","children","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","toString","onClick","disabled","confirm","_c","$RefreshReg$"],"sources":["/Users/abdulazizgossage/StudioProjects/spin and earn/admin/src/pages/Config.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { configApi } from '../services/api';\n\ninterface ConfigSection {\n  key: string;\n  title: string;\n  description: string;\n  isPublic: boolean;\n  fields: ConfigField[];\n}\n\ninterface ConfigField {\n  key: string;\n  label: string;\n  type: 'number' | 'text' | 'boolean' | 'array' | 'object';\n  description?: string;\n  min?: number;\n  max?: number;\n  step?: number;\n  defaultValue?: any;\n  required?: boolean;\n  warning?: string;\n}\n\nconst CONFIG_SECTIONS: ConfigSection[] = [\n  {\n    key: 'rewards',\n    title: 'Rewards Configuration',\n    description: 'Configure game rewards, jackpots, and bonuses',\n    isPublic: true,\n    fields: [\n      { \n        key: 'spin.base', \n        label: 'Base Spin Reward', \n        type: 'number', \n        description: 'Base coins per spin', \n        min: 1, \n        max: 100, \n        defaultValue: 1,\n        required: true,\n        warning: 'Higher values increase user satisfaction but reduce profitability'\n      },\n      { \n        key: 'spin.min', \n        label: 'Minimum Spin Reward', \n        type: 'number', \n        description: 'Minimum coins per spin', \n        min: 1, \n        max: 50, \n        defaultValue: 1,\n        required: true,\n        warning: 'Should be lower than or equal to base reward'\n      },\n      { \n        key: 'spin.max', \n        label: 'Maximum Spin Reward', \n        type: 'number', \n        description: 'Maximum coins per spin', \n        min: 10, \n        max: 1000, \n        defaultValue: 100,\n        required: true,\n        warning: 'Higher values increase excitement but reduce profitability'\n      },\n      { \n        key: 'jackpot', \n        label: 'Jackpot Reward', \n        type: 'number', \n        description: 'Jackpot coins amount', \n        min: 100, \n        max: 10000, \n        defaultValue: 100,\n        required: true,\n        warning: 'Very high values can be expensive but increase user engagement'\n      },\n      { \n        key: 'referral.inviter', \n        label: 'Referrer Bonus', \n        type: 'number', \n        description: 'Coins for referring someone', \n        min: 10, \n        max: 500, \n        defaultValue: 50,\n        required: true,\n        warning: 'Encourages user referrals'\n      },\n      { \n        key: 'referral.invitee', \n        label: 'Invitee Bonus', \n        type: 'number', \n        description: 'Coins for being referred', \n        min: 10, \n        max: 500, \n        defaultValue: 25,\n        required: true,\n        warning: 'Encourages new user signups'\n      },\n      { \n        key: 'referral.qualifyAfterCoins', \n        label: 'Qualify After Coins', \n        type: 'number', \n        description: 'Coins needed to qualify for referrals', \n        min: 50, \n        max: 1000, \n        defaultValue: 100,\n        required: true,\n        warning: 'Prevents abuse of referral system'\n      }\n    ]\n  },\n  {\n    key: 'streaks',\n    title: 'Streak Bonuses',\n    description: 'Configure daily streak rewards and multipliers',\n    isPublic: true,\n    fields: [\n      { \n        key: 'bonusMultiplier', \n        label: 'Streak Bonus Multiplier', \n        type: 'number', \n        description: 'Multiplier for streak bonuses', \n        min: 1, \n        max: 5, \n        step: 0.1,\n        defaultValue: 1.5,\n        required: true,\n        warning: 'Higher values encourage daily engagement'\n      },\n      { \n        key: 'maxStreakDays', \n        label: 'Maximum Streak Days', \n        type: 'number', \n        description: 'Maximum days for streak bonus', \n        min: 7, \n        max: 365, \n        defaultValue: 7,\n        required: true,\n        warning: 'Longer streaks increase retention but cost more'\n      },\n      { \n        key: 'day1Bonus', \n        label: 'Day 1 Bonus', \n        type: 'number', \n        description: 'Bonus coins for 1 day streak', \n        min: 0, \n        max: 100, \n        defaultValue: 10,\n        required: true\n      },\n      { \n        key: 'day3Bonus', \n        label: 'Day 3 Bonus', \n        type: 'number', \n        description: 'Bonus coins for 3 day streak', \n        min: 0, \n        max: 200, \n        defaultValue: 25,\n        required: true\n      },\n      { \n        key: 'day7Bonus', \n        label: 'Day 7 Bonus', \n        type: 'number', \n        description: 'Bonus coins for 7 day streak', \n        min: 0, \n        max: 500, \n        defaultValue: 100,\n        required: true\n      },\n      { \n        key: 'day30Bonus', \n        label: 'Day 30 Bonus', \n        type: 'number', \n        description: 'Bonus coins for 30 day streak', \n        min: 0, \n        max: 2000, \n        defaultValue: 500,\n        required: true,\n        warning: 'High value - consider carefully'\n      }\n    ]\n  },\n  {\n    key: 'caps',\n    title: 'Daily Limits & Caps',\n    description: 'Configure daily limits and restrictions',\n    isPublic: true,\n    fields: [\n      { \n        key: 'maxSpinsPerDay', \n        label: 'Max Spins Per Day', \n        type: 'number', \n        description: 'Maximum spins allowed per day', \n        min: 5, \n        max: 200, \n        defaultValue: 50,\n        required: true,\n        warning: 'Lower values reduce costs but may frustrate users'\n      },\n      { \n        key: 'minSecondsBetweenSpins', \n        label: 'Min Seconds Between Spins', \n        type: 'number', \n        description: 'Minimum time between spins', \n        min: 5, \n        max: 300, \n        defaultValue: 30,\n        required: true,\n        warning: 'Prevents rapid spinning abuse'\n      },\n      { \n        key: 'maxRewardedPerDay', \n        label: 'Max Rewarded Spins Per Day', \n        type: 'number', \n        description: 'Maximum rewarded spins per day', \n        min: 5, \n        max: 100, \n        defaultValue: 20,\n        required: true,\n        warning: 'Controls daily reward costs'\n      },\n      { \n        key: 'dailyCoinCap', \n        label: 'Daily Coin Cap', \n        type: 'number', \n        description: 'Maximum coins earned per day', \n        min: 100, \n        max: 5000, \n        defaultValue: 500,\n        required: true,\n        warning: 'Major cost control - set carefully'\n      }\n    ]\n  },\n  {\n    key: 'wheelWeights',\n    title: 'Spin Wheel Weights',\n    description: 'Configure probability weights for spin wheel outcomes',\n    isPublic: false,\n    fields: [\n      { \n        key: '2', \n        label: '2 Coins Weight', \n        type: 'number', \n        description: 'Probability weight for 2 coins', \n        min: 1, \n        max: 100, \n        defaultValue: 30,\n        required: true,\n        warning: 'Higher weight = more frequent occurrence'\n      },\n      { \n        key: '5', \n        label: '5 Coins Weight', \n        type: 'number', \n        description: 'Probability weight for 5 coins', \n        min: 1, \n        max: 100, \n        defaultValue: 25,\n        required: true\n      },\n      { \n        key: '10', \n        label: '10 Coins Weight', \n        type: 'number', \n        description: 'Probability weight for 10 coins', \n        min: 1, \n        max: 100, \n        defaultValue: 20,\n        required: true\n      },\n      { \n        key: '20', \n        label: '20 Coins Weight', \n        type: 'number', \n        description: 'Probability weight for 20 coins', \n        min: 1, \n        max: 100, \n        defaultValue: 15,\n        required: true\n      },\n      { \n        key: '50', \n        label: '50 Coins Weight', \n        type: 'number', \n        description: 'Probability weight for 50 coins', \n        min: 1, \n        max: 100, \n        defaultValue: 7,\n        required: true\n      },\n      { \n        key: 'jackpot', \n        label: 'Jackpot Weight', \n        type: 'number', \n        description: 'Probability weight for jackpot', \n        min: 1, \n        max: 10, \n        defaultValue: 1,\n        required: true,\n        warning: 'Very low weight - jackpots should be rare'\n      },\n      { \n        key: 'bonusSpin', \n        label: 'Bonus Spin Weight', \n        type: 'number', \n        description: 'Probability weight for bonus spin', \n        min: 1, \n        max: 10, \n        defaultValue: 1,\n        required: true\n      },\n      { \n        key: 'tryAgain', \n        label: 'Try Again Weight', \n        type: 'number', \n        description: 'Probability weight for try again', \n        min: 1, \n        max: 10, \n        defaultValue: 1,\n        required: true\n      }\n    ]\n  },\n  {\n    key: 'withdrawals',\n    title: 'Withdrawal Settings',\n    description: 'Configure withdrawal limits and fees',\n    isPublic: true,\n    fields: [\n      { \n        key: 'min', \n        label: 'Minimum Withdrawal', \n        type: 'number', \n        description: 'Minimum coins for withdrawal', \n        min: 100, \n        max: 10000, \n        defaultValue: 1000,\n        required: true,\n        warning: 'Higher values reduce processing costs but may frustrate users'\n      },\n      { \n        key: 'fee', \n        label: 'Withdrawal Fee (%)', \n        type: 'number', \n        description: 'Percentage fee for withdrawals', \n        min: 0, \n        max: 20, \n        step: 0.1,\n        defaultValue: 5,\n        required: true,\n        warning: 'Higher fees increase revenue but may discourage withdrawals'\n      },\n      { \n        key: 'cooldownHours', \n        label: 'Cooldown Hours', \n        type: 'number', \n        description: 'Hours between withdrawals', \n        min: 0, \n        max: 168, \n        defaultValue: 24,\n        required: true,\n        warning: 'Prevents rapid withdrawal abuse'\n      },\n      { \n        key: 'maxPerDay', \n        label: 'Max Withdrawals Per Day', \n        type: 'number', \n        description: 'Maximum withdrawal requests per day', \n        min: 1, \n        max: 10, \n        defaultValue: 3,\n        required: true\n      },\n      { \n        key: 'autoApproveLimit', \n        label: 'Auto-Approve Limit', \n        type: 'number', \n        description: 'Auto-approve withdrawals under this amount', \n        min: 0, \n        max: 1000, \n        defaultValue: 100,\n        required: true,\n        warning: 'Reduces admin workload but may increase fraud risk'\n      }\n    ]\n  },\n  {\n    key: 'security',\n    title: 'Security Settings',\n    description: 'Configure anti-fraud and security measures',\n    isPublic: false,\n    fields: [\n      { \n        key: 'allowEmulators', \n        label: 'Allow Emulators', \n        type: 'boolean', \n        description: 'Allow users on emulators', \n        defaultValue: false,\n        required: true,\n        warning: 'Emulators are often used for fraud'\n      },\n      { \n        key: 'rootedPenalty', \n        label: 'Rooted Device Penalty', \n        type: 'number', \n        description: 'Reward multiplier for rooted devices', \n        min: 0, \n        max: 1, \n        step: 0.1,\n        defaultValue: 0.5,\n        required: true,\n        warning: 'Rooted devices are higher risk'\n      },\n      { \n        key: 'ipVelocityWindowSec', \n        label: 'IP Velocity Window (sec)', \n        type: 'number', \n        description: 'Time window for IP velocity checks', \n        min: 300, \n        max: 86400, \n        defaultValue: 3600,\n        required: true\n      },\n      { \n        key: 'maxActionsPerWindow', \n        label: 'Max Actions Per Window', \n        type: 'number', \n        description: 'Maximum actions per time window', \n        min: 10, \n        max: 1000, \n        defaultValue: 100,\n        required: true\n      },\n      { \n        key: 'maxDevicesPerUser', \n        label: 'Max Devices Per User', \n        type: 'number', \n        description: 'Maximum devices per user account', \n        min: 1, \n        max: 10, \n        defaultValue: 3,\n        required: true\n      },\n      { \n        key: 'suspiciousIpThreshold', \n        label: 'Suspicious IP Threshold', \n        type: 'number', \n        description: 'Actions per IP before flagging', \n        min: 5, \n        max: 100, \n        defaultValue: 10,\n        required: true\n      }\n    ]\n  },\n  {\n    key: 'email',\n    title: 'Email Settings',\n    description: 'Configure email notifications and magic links',\n    isPublic: false,\n    fields: [\n      { \n        key: 'enabled', \n        label: 'Enable Email Features', \n        type: 'boolean', \n        description: 'Enable email notifications and magic links', \n        defaultValue: false,\n        required: true\n      },\n      { \n        key: 'smtpHost', \n        label: 'SMTP Host', \n        type: 'text', \n        description: 'SMTP server hostname', \n        defaultValue: 'smtp.gmail.com',\n        required: true\n      },\n      { \n        key: 'smtpPort', \n        label: 'SMTP Port', \n        type: 'number', \n        description: 'SMTP server port', \n        min: 1, \n        max: 65535, \n        defaultValue: 587,\n        required: true\n      },\n      { \n        key: 'smtpUser', \n        label: 'SMTP Username', \n        type: 'text', \n        description: 'SMTP authentication username', \n        defaultValue: '',\n        required: false\n      },\n      { \n        key: 'smtpPass', \n        label: 'SMTP Password', \n        type: 'text', \n        description: 'SMTP authentication password', \n        defaultValue: '',\n        required: false,\n        warning: 'Store securely - consider using environment variables'\n      },\n      { \n        key: 'fromEmail', \n        label: 'From Email', \n        type: 'text', \n        description: 'Sender email address', \n        defaultValue: 'noreply@spinearn.com',\n        required: true\n      },\n      { \n        key: 'fromName', \n        label: 'From Name', \n        type: 'text', \n        description: 'Sender display name', \n        defaultValue: 'Spin & Earn',\n        required: true\n      }\n    ]\n  },\n  {\n    key: 'app',\n    title: 'App Settings',\n    description: 'Configure app-wide settings and features',\n    isPublic: true,\n    fields: [\n      { \n        key: 'maintenanceMode', \n        label: 'Maintenance Mode', \n        type: 'boolean', \n        description: 'Enable maintenance mode', \n        defaultValue: false,\n        required: true,\n        warning: 'Will disable app access for users'\n      },\n      { \n        key: 'maintenanceMessage', \n        label: 'Maintenance Message', \n        type: 'text', \n        description: 'Message shown during maintenance', \n        defaultValue: 'We are currently performing maintenance. Please try again later.',\n        required: true\n      },\n      { \n        key: 'appVersion', \n        label: 'App Version', \n        type: 'text', \n        description: 'Current app version', \n        defaultValue: '1.0.0',\n        required: true\n      },\n      { \n        key: 'minAppVersion', \n        label: 'Minimum App Version', \n        type: 'text', \n        description: 'Minimum required app version', \n        defaultValue: '1.0.0',\n        required: true\n      },\n      { \n        key: 'forceUpdate', \n        label: 'Force Update', \n        type: 'boolean', \n        description: 'Force users to update app', \n        defaultValue: false,\n        required: true,\n        warning: 'Will prevent users from using older app versions'\n      },\n      { \n        key: 'updateMessage', \n        label: 'Update Message', \n        type: 'text', \n        description: 'Message shown for forced updates', \n        defaultValue: 'Please update to the latest version to continue using the app.',\n        required: true\n      }\n    ]\n  }\n];\n\nconst Config: React.FC = () => {\n  const [configs, setConfigs] = useState<Record<string, any>>({});\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState<Record<string, boolean>>({});\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [fieldErrors, setFieldErrors] = useState<Record<string, Record<string, string>>>({});\n  const [warnings, setWarnings] = useState<Record<string, Record<string, string>>>({});\n\n  useEffect(() => {\n    loadConfigs();\n  }, []);\n\n  const loadConfigs = async () => {\n    try {\n      setLoading(true);\n      const configPromises = CONFIG_SECTIONS.map(section => \n        configApi.getConfig(section.key).catch(() => ({ value: {} }))\n      );\n      \n      const results = await Promise.all(configPromises);\n      const configData: Record<string, any> = {};\n      \n      CONFIG_SECTIONS.forEach((section, index) => {\n        const result = results[index]?.value || {};\n        // Merge with defaults\n        const mergedConfig = { ...result };\n        section.fields.forEach(field => {\n          if (mergedConfig[field.key] === undefined && field.defaultValue !== undefined) {\n            if (field.key.includes('.')) {\n              const [parentKey, childKey] = field.key.split('.');\n              if (!mergedConfig[parentKey]) mergedConfig[parentKey] = {};\n              mergedConfig[parentKey][childKey] = field.defaultValue;\n            } else {\n              mergedConfig[field.key] = field.defaultValue;\n            }\n          }\n        });\n        configData[section.key] = mergedConfig;\n      });\n      \n      setConfigs(configData);\n    } catch (error) {\n      console.error('Error loading configs:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const validateField = (sectionKey: string, fieldKey: string, value: any, field: ConfigField): string => {\n    if (field.required && (value === undefined || value === null || value === '')) {\n      return 'This field is required';\n    }\n\n    if (field.type === 'number' && value !== undefined && value !== null && value !== '') {\n      const numValue = parseFloat(value);\n      if (isNaN(numValue)) {\n        return 'Must be a valid number';\n      }\n      if (field.min !== undefined && numValue < field.min) {\n        return `Minimum value is ${field.min}`;\n      }\n      if (field.max !== undefined && numValue > field.max) {\n        return `Maximum value is ${field.max}`;\n      }\n    }\n\n    return '';\n  };\n\n  const updateConfigValue = (sectionKey: string, fieldKey: string, value: any) => {\n    // Clear field error when user starts typing\n    setFieldErrors(prev => ({\n      ...prev,\n      [sectionKey]: {\n        ...prev[sectionKey],\n        [fieldKey]: ''\n      }\n    }));\n\n    setConfigs(prev => {\n      const currentSection = prev[sectionKey] || {};\n      \n      // Handle nested field keys like 'spin.base' or 'referral.inviter'\n      if (fieldKey.includes('.')) {\n        const [parentKey, childKey] = fieldKey.split('.');\n        return {\n          ...prev,\n          [sectionKey]: {\n            ...currentSection,\n            [parentKey]: {\n              ...currentSection[parentKey],\n              [childKey]: value\n            }\n          }\n        };\n      } else {\n        return {\n          ...prev,\n          [sectionKey]: {\n            ...currentSection,\n            [fieldKey]: value\n          }\n        };\n      }\n    });\n  };\n\n  const saveConfig = async (sectionKey: string) => {\n    try {\n      // Validate all fields in the section\n      const section = CONFIG_SECTIONS.find(s => s.key === sectionKey);\n      if (!section) return;\n\n      const sectionErrors: Record<string, string> = {};\n      let hasErrors = false;\n\n      section.fields.forEach(field => {\n        const error = validateField(sectionKey, field.key, getFieldValue(sectionKey, field.key), field);\n        if (error) {\n          sectionErrors[field.key] = error;\n          hasErrors = true;\n        }\n      });\n\n      if (hasErrors) {\n        setFieldErrors(prev => ({\n          ...prev,\n          [sectionKey]: sectionErrors\n        }));\n        return;\n      }\n\n      setSaving(prev => ({ ...prev, [sectionKey]: true }));\n      setErrors(prev => ({ ...prev, [sectionKey]: '' }));\n      \n      await configApi.updateConfig(sectionKey, configs[sectionKey]);\n      \n      // Show success message\n      alert(`${section.title} updated successfully!`);\n    } catch (error: any) {\n      console.error('Error saving config:', error);\n      let errorMessage = 'Failed to save configuration. Please try again.';\n      \n      if (error.response?.status === 429) {\n        errorMessage = 'Too many requests. Please wait a moment and try again.';\n      } else if (error.response?.data?.error) {\n        errorMessage = error.response.data.error;\n      }\n      \n      setErrors(prev => ({ \n        ...prev, \n        [sectionKey]: errorMessage \n      }));\n    } finally {\n      setSaving(prev => ({ ...prev, [sectionKey]: false }));\n    }\n  };\n\n  const getFieldValue = (sectionKey: string, fieldKey: string): any => {\n    if (fieldKey.includes('.')) {\n      const [parentKey, childKey] = fieldKey.split('.');\n      return configs[sectionKey]?.[parentKey]?.[childKey];\n    } else {\n      return configs[sectionKey]?.[fieldKey];\n    }\n  };\n\n  const renderField = (sectionKey: string, field: ConfigField) => {\n    const value = getFieldValue(sectionKey, field.key);\n    const error = fieldErrors[sectionKey]?.[field.key];\n    const warning = field.warning;\n    \n    switch (field.type) {\n      case 'number':\n        return (\n          <div className=\"space-y-1\">\n            <input\n              type=\"number\"\n              value={value || ''}\n              onChange={(e) => updateConfigValue(sectionKey, field.key, parseFloat(e.target.value) || 0)}\n              min={field.min}\n              max={field.max}\n              step={field.step || 1}\n              className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${\n                error ? 'border-red-500' : 'border-gray-300'\n              }`}\n            />\n            {error && (\n              <p className=\"text-xs text-red-600\">{error}</p>\n            )}\n            {warning && !error && (\n              <p className=\"text-xs text-yellow-600\">{warning}</p>\n            )}\n          </div>\n        );\n      \n      case 'boolean':\n        return (\n          <div className=\"space-y-1\">\n            <select\n              value={value?.toString() || 'false'}\n              onChange={(e) => updateConfigValue(sectionKey, field.key, e.target.value === 'true')}\n              className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${\n                error ? 'border-red-500' : 'border-gray-300'\n              }`}\n            >\n              <option value=\"true\">Enabled</option>\n              <option value=\"false\">Disabled</option>\n            </select>\n            {error && (\n              <p className=\"text-xs text-red-600\">{error}</p>\n            )}\n            {warning && !error && (\n              <p className=\"text-xs text-yellow-600\">{warning}</p>\n            )}\n          </div>\n        );\n      \n      default:\n        return (\n          <div className=\"space-y-1\">\n            <input\n              type=\"text\"\n              value={value || ''}\n              onChange={(e) => updateConfigValue(sectionKey, field.key, e.target.value)}\n              className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${\n                error ? 'border-red-500' : 'border-gray-300'\n              }`}\n            />\n            {error && (\n              <p className=\"text-xs text-red-600\">{error}</p>\n            )}\n            {warning && !error && (\n              <p className=\"text-xs text-yellow-600\">{warning}</p>\n            )}\n          </div>\n        );\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"mb-6\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Configuration</h1>\n            <p className=\"text-gray-600\">Manage game settings, rewards, and security configurations</p>\n          </div>\n          <div className=\"flex space-x-3\">\n            <button\n              onClick={loadConfigs}\n              disabled={loading}\n              className=\"px-4 py-2 bg-gray-500 text-white rounded-md hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              Reload\n            </button>\n            <button\n              onClick={() => {\n                if (confirm('Are you sure you want to reset all configurations to default values? This action cannot be undone.')) {\n                  loadConfigs();\n                }\n              }}\n              disabled={loading}\n              className=\"px-4 py-2 bg-orange-500 text-white rounded-md hover:bg-orange-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              Reset to Defaults\n            </button>\n          </div>\n        </div>\n\n        {errors.all && (\n          <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\n            {errors.all}\n          </div>\n        )}\n      </div>\n\n      <div className=\"space-y-6\">\n        {CONFIG_SECTIONS.map((section) => (\n          <div key={section.key} className=\"bg-white rounded-lg shadow-md p-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <div>\n                <h2 className=\"text-xl font-semibold text-gray-900\">{section.title}</h2>\n                <p className=\"text-gray-600 text-sm\">{section.description}</p>\n                <span className={`inline-block px-2 py-1 text-xs rounded-full mt-2 ${\n                  section.isPublic \n                    ? 'bg-green-100 text-green-800' \n                    : 'bg-red-100 text-red-800'\n                }`}>\n                  {section.isPublic ? 'Public' : 'Private'}\n                </span>\n              </div>\n              <button\n                onClick={() => saveConfig(section.key)}\n                disabled={saving[section.key]}\n                className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {saving[section.key] ? 'Saving...' : 'Save Changes'}\n              </button>\n            </div>\n\n            {errors[section.key] && (\n              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\n                {errors[section.key]}\n              </div>\n            )}\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {section.fields.map((field) => (\n                <div key={field.key} className=\"space-y-2\">\n                  <label className=\"block text-sm font-medium text-gray-700\">\n                    {field.label}\n                    {field.required && <span className=\"text-red-500 ml-1\">*</span>}\n                  </label>\n                  {renderField(section.key, field)}\n                  {field.description && (\n                    <p className=\"text-xs text-gray-500\">{field.description}</p>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"mt-8 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n        <h3 className=\"text-lg font-semibold text-blue-900 mb-2\">Configuration Notes</h3>\n        <ul className=\"text-sm text-blue-800 space-y-1\">\n          <li>• <strong>Public</strong> configurations are visible to users and affect game behavior</li>\n          <li>• <strong>Private</strong> configurations are for internal use and security</li>\n          <li>• Changes take effect immediately after saving</li>\n          <li>• Be careful with security settings to prevent abuse</li>\n          <li>• Wheel weights determine the probability of each spin outcome</li>\n          <li>• Fields marked with <span className=\"text-red-500\">*</span> are required</li>\n          <li>• Yellow warnings indicate important considerations</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Config;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}