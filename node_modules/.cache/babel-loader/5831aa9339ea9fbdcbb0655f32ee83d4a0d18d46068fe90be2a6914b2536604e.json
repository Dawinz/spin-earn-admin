{"ast":null,"code":"import{useState,useEffect,createContext,useContext}from'react';import{authApi}from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export function AuthProvider(_ref){let{children}=_ref;const[user,setUser]=useState(null);const[isLoading,setIsLoading]=useState(true);useEffect(()=>{// Check if user is already logged in\nconst token=localStorage.getItem('accessToken');if(token){// Verify token and get user info\nauthApi.getProfile().then(userData=>{setUser(userData);}).catch(()=>{localStorage.removeItem('accessToken');localStorage.removeItem('refreshToken');}).finally(()=>{setIsLoading(false);});}else{setIsLoading(false);}},[]);const login=async(email,password)=>{try{const response=await authApi.login(email,password);localStorage.setItem('accessToken',response.accessToken);localStorage.setItem('refreshToken',response.refreshToken);setUser(response.user);}catch(error){throw error;}};const logout=()=>{localStorage.removeItem('accessToken');localStorage.removeItem('refreshToken');setUser(null);};const value={user,isAuthenticated:!!user,isLoading,login,logout};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});}export function useAuth(){const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;}","map":{"version":3,"names":["useState","useEffect","createContext","useContext","authApi","jsx","_jsx","AuthContext","undefined","AuthProvider","_ref","children","user","setUser","isLoading","setIsLoading","token","localStorage","getItem","getProfile","then","userData","catch","removeItem","finally","login","email","password","response","setItem","accessToken","refreshToken","error","logout","value","isAuthenticated","Provider","useAuth","context","Error"],"sources":["/Users/abdulazizgossage/StudioProjects/spin and earn/admin/src/hooks/useAuth.tsx"],"sourcesContent":["import { useState, useEffect, createContext, useContext } from 'react';\nimport { authApi } from '../services/api';\n\ninterface User {\n  id: string;\n  email: string;\n  roles: string[];\n}\n\ninterface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = localStorage.getItem('accessToken');\n    if (token) {\n      // Verify token and get user info\n      authApi.getProfile()\n        .then(userData => {\n          setUser(userData);\n        })\n        .catch(() => {\n          localStorage.removeItem('accessToken');\n          localStorage.removeItem('refreshToken');\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await authApi.login(email, password);\n      localStorage.setItem('accessToken', response.accessToken);\n      localStorage.setItem('refreshToken', response.refreshToken);\n      setUser(response.user);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n    setUser(null);\n  };\n\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    isLoading,\n    login,\n    logout,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,CAAEC,aAAa,CAAEC,UAAU,KAAQ,OAAO,CACtE,OAASC,OAAO,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAgB1C,KAAM,CAAAC,WAAW,cAAGL,aAAa,CAA8BM,SAAS,CAAC,CAEzE,MAAO,SAAS,CAAAC,YAAYA,CAAAC,IAAA,CAA8C,IAA7C,CAAEC,QAAwC,CAAC,CAAAD,IAAA,CACtE,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAc,IAAI,CAAC,CACnD,KAAM,CAACc,SAAS,CAAEC,YAAY,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAEhDC,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAe,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CACjD,GAAIF,KAAK,CAAE,CACT;AACAZ,OAAO,CAACe,UAAU,CAAC,CAAC,CACjBC,IAAI,CAACC,QAAQ,EAAI,CAChBR,OAAO,CAACQ,QAAQ,CAAC,CACnB,CAAC,CAAC,CACDC,KAAK,CAAC,IAAM,CACXL,YAAY,CAACM,UAAU,CAAC,aAAa,CAAC,CACtCN,YAAY,CAACM,UAAU,CAAC,cAAc,CAAC,CACzC,CAAC,CAAC,CACDC,OAAO,CAAC,IAAM,CACbT,YAAY,CAAC,KAAK,CAAC,CACrB,CAAC,CAAC,CACN,CAAC,IAAM,CACLA,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAU,KAAK,CAAG,KAAAA,CAAOC,KAAa,CAAEC,QAAgB,GAAK,CACvD,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAxB,OAAO,CAACqB,KAAK,CAACC,KAAK,CAAEC,QAAQ,CAAC,CACrDV,YAAY,CAACY,OAAO,CAAC,aAAa,CAAED,QAAQ,CAACE,WAAW,CAAC,CACzDb,YAAY,CAACY,OAAO,CAAC,cAAc,CAAED,QAAQ,CAACG,YAAY,CAAC,CAC3DlB,OAAO,CAACe,QAAQ,CAAChB,IAAI,CAAC,CACxB,CAAE,MAAOoB,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,KAAM,CAAAC,MAAM,CAAGA,CAAA,GAAM,CACnBhB,YAAY,CAACM,UAAU,CAAC,aAAa,CAAC,CACtCN,YAAY,CAACM,UAAU,CAAC,cAAc,CAAC,CACvCV,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAED,KAAM,CAAAqB,KAAK,CAAG,CACZtB,IAAI,CACJuB,eAAe,CAAE,CAAC,CAACvB,IAAI,CACvBE,SAAS,CACTW,KAAK,CACLQ,MACF,CAAC,CAED,mBACE3B,IAAA,CAACC,WAAW,CAAC6B,QAAQ,EAACF,KAAK,CAAEA,KAAM,CAAAvB,QAAA,CAChCA,QAAQ,CACW,CAAC,CAE3B,CAEA,MAAO,SAAS,CAAA0B,OAAOA,CAAA,CAAG,CACxB,KAAM,CAAAC,OAAO,CAAGnC,UAAU,CAACI,WAAW,CAAC,CACvC,GAAI+B,OAAO,GAAK9B,SAAS,CAAE,CACzB,KAAM,IAAI,CAAA+B,KAAK,CAAC,6CAA6C,CAAC,CAChE,CACA,MAAO,CAAAD,OAAO,CAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}