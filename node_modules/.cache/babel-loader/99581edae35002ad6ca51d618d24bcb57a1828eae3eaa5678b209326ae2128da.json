{"ast":null,"code":"var _jsxFileName = \"/Users/abdulazizgossage/StudioProjects/spin and earn/admin/src/pages/Config.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { configApi } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONFIG_SECTIONS = [{\n  key: 'rewards',\n  title: 'Rewards Configuration',\n  description: 'Configure game rewards, jackpots, and bonuses',\n  isPublic: true,\n  fields: [{\n    key: 'spin.base',\n    label: 'Base Spin Reward',\n    type: 'number',\n    description: 'Base coins per spin',\n    min: 1,\n    max: 100\n  }, {\n    key: 'spin.min',\n    label: 'Minimum Spin Reward',\n    type: 'number',\n    description: 'Minimum coins per spin',\n    min: 1,\n    max: 50\n  }, {\n    key: 'spin.max',\n    label: 'Maximum Spin Reward',\n    type: 'number',\n    description: 'Maximum coins per spin',\n    min: 10,\n    max: 1000\n  }, {\n    key: 'jackpot',\n    label: 'Jackpot Reward',\n    type: 'number',\n    description: 'Jackpot coins amount',\n    min: 100,\n    max: 10000\n  }, {\n    key: 'referral.inviter',\n    label: 'Referrer Bonus',\n    type: 'number',\n    description: 'Coins for referring someone',\n    min: 10,\n    max: 500\n  }, {\n    key: 'referral.invitee',\n    label: 'Invitee Bonus',\n    type: 'number',\n    description: 'Coins for being referred',\n    min: 10,\n    max: 500\n  }, {\n    key: 'referral.qualifyAfterCoins',\n    label: 'Qualify After Coins',\n    type: 'number',\n    description: 'Coins needed to qualify for referrals',\n    min: 50,\n    max: 1000\n  }]\n}, {\n  key: 'streaks',\n  title: 'Streak Bonuses',\n  description: 'Configure daily streak rewards and multipliers',\n  isPublic: true,\n  fields: [{\n    key: 'bonusMultiplier',\n    label: 'Streak Bonus Multiplier',\n    type: 'number',\n    description: 'Multiplier for streak bonuses',\n    min: 1,\n    max: 5,\n    step: 0.1\n  }, {\n    key: 'maxStreakDays',\n    label: 'Maximum Streak Days',\n    type: 'number',\n    description: 'Maximum days for streak bonus',\n    min: 7,\n    max: 365\n  }, {\n    key: 'day1Bonus',\n    label: 'Day 1 Bonus',\n    type: 'number',\n    description: 'Bonus coins for 1 day streak',\n    min: 0,\n    max: 100\n  }, {\n    key: 'day3Bonus',\n    label: 'Day 3 Bonus',\n    type: 'number',\n    description: 'Bonus coins for 3 day streak',\n    min: 0,\n    max: 200\n  }, {\n    key: 'day7Bonus',\n    label: 'Day 7 Bonus',\n    type: 'number',\n    description: 'Bonus coins for 7 day streak',\n    min: 0,\n    max: 500\n  }, {\n    key: 'day30Bonus',\n    label: 'Day 30 Bonus',\n    type: 'number',\n    description: 'Bonus coins for 30 day streak',\n    min: 0,\n    max: 2000\n  }]\n}, {\n  key: 'caps',\n  title: 'Daily Limits & Caps',\n  description: 'Configure daily limits and restrictions',\n  isPublic: true,\n  fields: [{\n    key: 'maxSpinsPerDay',\n    label: 'Max Spins Per Day',\n    type: 'number',\n    description: 'Maximum spins allowed per day',\n    min: 5,\n    max: 200\n  }, {\n    key: 'minSecondsBetweenSpins',\n    label: 'Min Seconds Between Spins',\n    type: 'number',\n    description: 'Minimum time between spins',\n    min: 5,\n    max: 300\n  }, {\n    key: 'maxRewardedPerDay',\n    label: 'Max Rewarded Spins Per Day',\n    type: 'number',\n    description: 'Maximum rewarded spins per day',\n    min: 5,\n    max: 100\n  }, {\n    key: 'dailyCoinCap',\n    label: 'Daily Coin Cap',\n    type: 'number',\n    description: 'Maximum coins earned per day',\n    min: 100,\n    max: 5000\n  }]\n}, {\n  key: 'wheelWeights',\n  title: 'Spin Wheel Weights',\n  description: 'Configure probability weights for spin wheel outcomes',\n  isPublic: false,\n  fields: [{\n    key: '2',\n    label: '2 Coins Weight',\n    type: 'number',\n    description: 'Probability weight for 2 coins',\n    min: 1,\n    max: 100\n  }, {\n    key: '5',\n    label: '5 Coins Weight',\n    type: 'number',\n    description: 'Probability weight for 5 coins',\n    min: 1,\n    max: 100\n  }, {\n    key: '10',\n    label: '10 Coins Weight',\n    type: 'number',\n    description: 'Probability weight for 10 coins',\n    min: 1,\n    max: 100\n  }, {\n    key: '20',\n    label: '20 Coins Weight',\n    type: 'number',\n    description: 'Probability weight for 20 coins',\n    min: 1,\n    max: 100\n  }, {\n    key: '50',\n    label: '50 Coins Weight',\n    type: 'number',\n    description: 'Probability weight for 50 coins',\n    min: 1,\n    max: 100\n  }, {\n    key: 'jackpot',\n    label: 'Jackpot Weight',\n    type: 'number',\n    description: 'Probability weight for jackpot',\n    min: 1,\n    max: 10\n  }, {\n    key: 'bonusSpin',\n    label: 'Bonus Spin Weight',\n    type: 'number',\n    description: 'Probability weight for bonus spin',\n    min: 1,\n    max: 10\n  }, {\n    key: 'tryAgain',\n    label: 'Try Again Weight',\n    type: 'number',\n    description: 'Probability weight for try again',\n    min: 1,\n    max: 10\n  }]\n}, {\n  key: 'withdrawals',\n  title: 'Withdrawal Settings',\n  description: 'Configure withdrawal limits and fees',\n  isPublic: true,\n  fields: [{\n    key: 'min',\n    label: 'Minimum Withdrawal',\n    type: 'number',\n    description: 'Minimum coins for withdrawal',\n    min: 100,\n    max: 10000\n  }, {\n    key: 'fee',\n    label: 'Withdrawal Fee (%)',\n    type: 'number',\n    description: 'Percentage fee for withdrawals',\n    min: 0,\n    max: 20,\n    step: 0.1\n  }, {\n    key: 'cooldownHours',\n    label: 'Cooldown Hours',\n    type: 'number',\n    description: 'Hours between withdrawals',\n    min: 0,\n    max: 168\n  }, {\n    key: 'maxPerDay',\n    label: 'Max Withdrawals Per Day',\n    type: 'number',\n    description: 'Maximum withdrawal requests per day',\n    min: 1,\n    max: 10\n  }, {\n    key: 'autoApproveLimit',\n    label: 'Auto-Approve Limit',\n    type: 'number',\n    description: 'Auto-approve withdrawals under this amount',\n    min: 0,\n    max: 1000\n  }]\n}, {\n  key: 'security',\n  title: 'Security Settings',\n  description: 'Configure anti-fraud and security measures',\n  isPublic: false,\n  fields: [{\n    key: 'allowEmulators',\n    label: 'Allow Emulators',\n    type: 'boolean',\n    description: 'Allow users on emulators'\n  }, {\n    key: 'rootedPenalty',\n    label: 'Rooted Device Penalty',\n    type: 'number',\n    description: 'Reward multiplier for rooted devices',\n    min: 0,\n    max: 1,\n    step: 0.1\n  }, {\n    key: 'ipVelocityWindowSec',\n    label: 'IP Velocity Window (sec)',\n    type: 'number',\n    description: 'Time window for IP velocity checks',\n    min: 300,\n    max: 86400\n  }, {\n    key: 'maxActionsPerWindow',\n    label: 'Max Actions Per Window',\n    type: 'number',\n    description: 'Maximum actions per time window',\n    min: 10,\n    max: 1000\n  }, {\n    key: 'maxDevicesPerUser',\n    label: 'Max Devices Per User',\n    type: 'number',\n    description: 'Maximum devices per user account',\n    min: 1,\n    max: 10\n  }, {\n    key: 'suspiciousIpThreshold',\n    label: 'Suspicious IP Threshold',\n    type: 'number',\n    description: 'Actions per IP before flagging',\n    min: 5,\n    max: 100\n  }]\n}, {\n  key: 'email',\n  title: 'Email Settings',\n  description: 'Configure email notifications and magic links',\n  isPublic: false,\n  fields: [{\n    key: 'enabled',\n    label: 'Enable Email Features',\n    type: 'boolean',\n    description: 'Enable email notifications and magic links'\n  }, {\n    key: 'smtpHost',\n    label: 'SMTP Host',\n    type: 'text',\n    description: 'SMTP server hostname'\n  }, {\n    key: 'smtpPort',\n    label: 'SMTP Port',\n    type: 'number',\n    description: 'SMTP server port',\n    min: 1,\n    max: 65535\n  }, {\n    key: 'smtpUser',\n    label: 'SMTP Username',\n    type: 'text',\n    description: 'SMTP authentication username'\n  }, {\n    key: 'smtpPass',\n    label: 'SMTP Password',\n    type: 'text',\n    description: 'SMTP authentication password'\n  }, {\n    key: 'fromEmail',\n    label: 'From Email',\n    type: 'text',\n    description: 'Sender email address'\n  }, {\n    key: 'fromName',\n    label: 'From Name',\n    type: 'text',\n    description: 'Sender display name'\n  }]\n}, {\n  key: 'app',\n  title: 'App Settings',\n  description: 'Configure app-wide settings and features',\n  isPublic: true,\n  fields: [{\n    key: 'maintenanceMode',\n    label: 'Maintenance Mode',\n    type: 'boolean',\n    description: 'Enable maintenance mode'\n  }, {\n    key: 'maintenanceMessage',\n    label: 'Maintenance Message',\n    type: 'text',\n    description: 'Message shown during maintenance'\n  }, {\n    key: 'appVersion',\n    label: 'App Version',\n    type: 'text',\n    description: 'Current app version'\n  }, {\n    key: 'minAppVersion',\n    label: 'Minimum App Version',\n    type: 'text',\n    description: 'Minimum required app version'\n  }, {\n    key: 'forceUpdate',\n    label: 'Force Update',\n    type: 'boolean',\n    description: 'Force users to update app'\n  }, {\n    key: 'updateMessage',\n    label: 'Update Message',\n    type: 'text',\n    description: 'Message shown for forced updates'\n  }]\n}];\nconst Config = () => {\n  _s();\n  const [configs, setConfigs] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState({});\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    loadConfigs();\n  }, []);\n  const loadConfigs = async () => {\n    try {\n      setLoading(true);\n      const configPromises = CONFIG_SECTIONS.map(section => configApi.getConfig(section.key).catch(() => ({\n        value: {}\n      })));\n      const results = await Promise.all(configPromises);\n      const configData = {};\n      CONFIG_SECTIONS.forEach((section, index) => {\n        var _results$index;\n        configData[section.key] = ((_results$index = results[index]) === null || _results$index === void 0 ? void 0 : _results$index.value) || {};\n      });\n      setConfigs(configData);\n    } catch (error) {\n      console.error('Error loading configs:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateConfigValue = (sectionKey, fieldKey, value) => {\n    setConfigs(prev => ({\n      ...prev,\n      [sectionKey]: {\n        ...prev[sectionKey],\n        [fieldKey]: value\n      }\n    }));\n  };\n  const saveConfig = async sectionKey => {\n    try {\n      setSaving(prev => ({\n        ...prev,\n        [sectionKey]: true\n      }));\n      setErrors(prev => ({\n        ...prev,\n        [sectionKey]: ''\n      }));\n      await configApi.updateConfig(sectionKey, configs[sectionKey]);\n\n      // Show success message\n      const section = CONFIG_SECTIONS.find(s => s.key === sectionKey);\n      alert(`${section === null || section === void 0 ? void 0 : section.title} updated successfully!`);\n    } catch (error) {\n      console.error('Error saving config:', error);\n      setErrors(prev => ({\n        ...prev,\n        [sectionKey]: 'Failed to save configuration. Please try again.'\n      }));\n    } finally {\n      setSaving(prev => ({\n        ...prev,\n        [sectionKey]: false\n      }));\n    }\n  };\n  const saveAllConfigs = async () => {\n    try {\n      setSaving(prev => ({\n        ...prev,\n        all: true\n      }));\n      setErrors(prev => ({\n        ...prev,\n        all: ''\n      }));\n      const savePromises = CONFIG_SECTIONS.map(section => configApi.updateConfig(section.key, configs[section.key]));\n      await Promise.all(savePromises);\n      alert('All configurations saved successfully!');\n    } catch (error) {\n      console.error('Error saving all configs:', error);\n      setErrors(prev => ({\n        ...prev,\n        all: 'Failed to save some configurations. Please try again.'\n      }));\n    } finally {\n      setSaving(prev => ({\n        ...prev,\n        all: false\n      }));\n    }\n  };\n  const resetToDefaults = async () => {\n    if (!confirm('Are you sure you want to reset all configurations to default values? This action cannot be undone.')) {\n      return;\n    }\n    try {\n      setLoading(true);\n      // This would typically call an API endpoint to reset configs\n      // For now, we'll just reload the configs\n      await loadConfigs();\n      alert('Configurations reset to defaults!');\n    } catch (error) {\n      console.error('Error resetting configs:', error);\n      alert('Failed to reset configurations. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const renderField = (sectionKey, field) => {\n    var _configs$sectionKey;\n    const value = (_configs$sectionKey = configs[sectionKey]) === null || _configs$sectionKey === void 0 ? void 0 : _configs$sectionKey[field.key];\n    switch (field.type) {\n      case 'number':\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: value || '',\n          onChange: e => updateConfigValue(sectionKey, field.key, parseFloat(e.target.value) || 0),\n          min: field.min,\n          max: field.max,\n          step: field.step || 1,\n          className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this);\n      case 'boolean':\n        return /*#__PURE__*/_jsxDEV(\"select\", {\n          value: (value === null || value === void 0 ? void 0 : value.toString()) || 'false',\n          onChange: e => updateConfigValue(sectionKey, field.key, e.target.value === 'true'),\n          className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"true\",\n            children: \"Enabled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"false\",\n            children: \"Disabled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: value || '',\n          onChange: e => updateConfigValue(sectionKey, field.key, e.target.value),\n          className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-64\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-gray-900 mb-2\",\n        children: \"Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"Manage game settings, rewards, and security configurations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-6\",\n      children: CONFIG_SECTIONS.map(section => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold text-gray-900\",\n              children: section.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600 text-sm\",\n              children: section.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `inline-block px-2 py-1 text-xs rounded-full mt-2 ${section.isPublic ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`,\n              children: section.isPublic ? 'Public' : 'Private'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => saveConfig(section.key),\n            disabled: saving[section.key],\n            className: \"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed\",\n            children: saving[section.key] ? 'Saving...' : 'Save Changes'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), errors[section.key] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\",\n          children: errors[section.key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n          children: section.fields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700\",\n              children: field.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 19\n            }, this), renderField(section.key, field), field.description && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-500\",\n              children: field.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 21\n            }, this)]\n          }, field.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this)]\n      }, section.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 p-4 bg-blue-50 border border-blue-200 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-blue-900 mb-2\",\n        children: \"Configuration Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"text-sm text-blue-800 space-y-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Public\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 17\n          }, this), \" configurations are visible to users and affect game behavior\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Private\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 17\n          }, this), \" configurations are for internal use and security\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2022 Changes take effect immediately after saving\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2022 Be careful with security settings to prevent abuse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2022 Wheel weights determine the probability of each spin outcome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n};\n_s(Config, \"UALuiSCeFtabuY8xKNy97iu8uK0=\");\n_c = Config;\nexport default Config;\nvar _c;\n$RefreshReg$(_c, \"Config\");","map":{"version":3,"names":["React","useState","useEffect","configApi","jsxDEV","_jsxDEV","CONFIG_SECTIONS","key","title","description","isPublic","fields","label","type","min","max","step","Config","_s","configs","setConfigs","loading","setLoading","saving","setSaving","errors","setErrors","loadConfigs","configPromises","map","section","getConfig","catch","value","results","Promise","all","configData","forEach","index","_results$index","error","console","updateConfigValue","sectionKey","fieldKey","prev","saveConfig","updateConfig","find","s","alert","saveAllConfigs","savePromises","resetToDefaults","confirm","renderField","field","_configs$sectionKey","onChange","e","parseFloat","target","className","fileName","_jsxFileName","lineNumber","columnNumber","toString","children","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/abdulazizgossage/StudioProjects/spin and earn/admin/src/pages/Config.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { configApi } from '../services/api';\n\ninterface ConfigSection {\n  key: string;\n  title: string;\n  description: string;\n  isPublic: boolean;\n  fields: ConfigField[];\n}\n\ninterface ConfigField {\n  key: string;\n  label: string;\n  type: 'number' | 'text' | 'boolean' | 'array' | 'object';\n  description?: string;\n  min?: number;\n  max?: number;\n  step?: number;\n}\n\nconst CONFIG_SECTIONS: ConfigSection[] = [\n  {\n    key: 'rewards',\n    title: 'Rewards Configuration',\n    description: 'Configure game rewards, jackpots, and bonuses',\n    isPublic: true,\n    fields: [\n      { key: 'spin.base', label: 'Base Spin Reward', type: 'number', description: 'Base coins per spin', min: 1, max: 100 },\n      { key: 'spin.min', label: 'Minimum Spin Reward', type: 'number', description: 'Minimum coins per spin', min: 1, max: 50 },\n      { key: 'spin.max', label: 'Maximum Spin Reward', type: 'number', description: 'Maximum coins per spin', min: 10, max: 1000 },\n      { key: 'jackpot', label: 'Jackpot Reward', type: 'number', description: 'Jackpot coins amount', min: 100, max: 10000 },\n      { key: 'referral.inviter', label: 'Referrer Bonus', type: 'number', description: 'Coins for referring someone', min: 10, max: 500 },\n      { key: 'referral.invitee', label: 'Invitee Bonus', type: 'number', description: 'Coins for being referred', min: 10, max: 500 },\n      { key: 'referral.qualifyAfterCoins', label: 'Qualify After Coins', type: 'number', description: 'Coins needed to qualify for referrals', min: 50, max: 1000 }\n    ]\n  },\n  {\n    key: 'streaks',\n    title: 'Streak Bonuses',\n    description: 'Configure daily streak rewards and multipliers',\n    isPublic: true,\n    fields: [\n      { key: 'bonusMultiplier', label: 'Streak Bonus Multiplier', type: 'number', description: 'Multiplier for streak bonuses', min: 1, max: 5, step: 0.1 },\n      { key: 'maxStreakDays', label: 'Maximum Streak Days', type: 'number', description: 'Maximum days for streak bonus', min: 7, max: 365 },\n      { key: 'day1Bonus', label: 'Day 1 Bonus', type: 'number', description: 'Bonus coins for 1 day streak', min: 0, max: 100 },\n      { key: 'day3Bonus', label: 'Day 3 Bonus', type: 'number', description: 'Bonus coins for 3 day streak', min: 0, max: 200 },\n      { key: 'day7Bonus', label: 'Day 7 Bonus', type: 'number', description: 'Bonus coins for 7 day streak', min: 0, max: 500 },\n      { key: 'day30Bonus', label: 'Day 30 Bonus', type: 'number', description: 'Bonus coins for 30 day streak', min: 0, max: 2000 }\n    ]\n  },\n  {\n    key: 'caps',\n    title: 'Daily Limits & Caps',\n    description: 'Configure daily limits and restrictions',\n    isPublic: true,\n    fields: [\n      { key: 'maxSpinsPerDay', label: 'Max Spins Per Day', type: 'number', description: 'Maximum spins allowed per day', min: 5, max: 200 },\n      { key: 'minSecondsBetweenSpins', label: 'Min Seconds Between Spins', type: 'number', description: 'Minimum time between spins', min: 5, max: 300 },\n      { key: 'maxRewardedPerDay', label: 'Max Rewarded Spins Per Day', type: 'number', description: 'Maximum rewarded spins per day', min: 5, max: 100 },\n      { key: 'dailyCoinCap', label: 'Daily Coin Cap', type: 'number', description: 'Maximum coins earned per day', min: 100, max: 5000 }\n    ]\n  },\n  {\n    key: 'wheelWeights',\n    title: 'Spin Wheel Weights',\n    description: 'Configure probability weights for spin wheel outcomes',\n    isPublic: false,\n    fields: [\n      { key: '2', label: '2 Coins Weight', type: 'number', description: 'Probability weight for 2 coins', min: 1, max: 100 },\n      { key: '5', label: '5 Coins Weight', type: 'number', description: 'Probability weight for 5 coins', min: 1, max: 100 },\n      { key: '10', label: '10 Coins Weight', type: 'number', description: 'Probability weight for 10 coins', min: 1, max: 100 },\n      { key: '20', label: '20 Coins Weight', type: 'number', description: 'Probability weight for 20 coins', min: 1, max: 100 },\n      { key: '50', label: '50 Coins Weight', type: 'number', description: 'Probability weight for 50 coins', min: 1, max: 100 },\n      { key: 'jackpot', label: 'Jackpot Weight', type: 'number', description: 'Probability weight for jackpot', min: 1, max: 10 },\n      { key: 'bonusSpin', label: 'Bonus Spin Weight', type: 'number', description: 'Probability weight for bonus spin', min: 1, max: 10 },\n      { key: 'tryAgain', label: 'Try Again Weight', type: 'number', description: 'Probability weight for try again', min: 1, max: 10 }\n    ]\n  },\n  {\n    key: 'withdrawals',\n    title: 'Withdrawal Settings',\n    description: 'Configure withdrawal limits and fees',\n    isPublic: true,\n    fields: [\n      { key: 'min', label: 'Minimum Withdrawal', type: 'number', description: 'Minimum coins for withdrawal', min: 100, max: 10000 },\n      { key: 'fee', label: 'Withdrawal Fee (%)', type: 'number', description: 'Percentage fee for withdrawals', min: 0, max: 20, step: 0.1 },\n      { key: 'cooldownHours', label: 'Cooldown Hours', type: 'number', description: 'Hours between withdrawals', min: 0, max: 168 },\n      { key: 'maxPerDay', label: 'Max Withdrawals Per Day', type: 'number', description: 'Maximum withdrawal requests per day', min: 1, max: 10 },\n      { key: 'autoApproveLimit', label: 'Auto-Approve Limit', type: 'number', description: 'Auto-approve withdrawals under this amount', min: 0, max: 1000 }\n    ]\n  },\n  {\n    key: 'security',\n    title: 'Security Settings',\n    description: 'Configure anti-fraud and security measures',\n    isPublic: false,\n    fields: [\n      { key: 'allowEmulators', label: 'Allow Emulators', type: 'boolean', description: 'Allow users on emulators' },\n      { key: 'rootedPenalty', label: 'Rooted Device Penalty', type: 'number', description: 'Reward multiplier for rooted devices', min: 0, max: 1, step: 0.1 },\n      { key: 'ipVelocityWindowSec', label: 'IP Velocity Window (sec)', type: 'number', description: 'Time window for IP velocity checks', min: 300, max: 86400 },\n      { key: 'maxActionsPerWindow', label: 'Max Actions Per Window', type: 'number', description: 'Maximum actions per time window', min: 10, max: 1000 },\n      { key: 'maxDevicesPerUser', label: 'Max Devices Per User', type: 'number', description: 'Maximum devices per user account', min: 1, max: 10 },\n      { key: 'suspiciousIpThreshold', label: 'Suspicious IP Threshold', type: 'number', description: 'Actions per IP before flagging', min: 5, max: 100 }\n    ]\n  },\n  {\n    key: 'email',\n    title: 'Email Settings',\n    description: 'Configure email notifications and magic links',\n    isPublic: false,\n    fields: [\n      { key: 'enabled', label: 'Enable Email Features', type: 'boolean', description: 'Enable email notifications and magic links' },\n      { key: 'smtpHost', label: 'SMTP Host', type: 'text', description: 'SMTP server hostname' },\n      { key: 'smtpPort', label: 'SMTP Port', type: 'number', description: 'SMTP server port', min: 1, max: 65535 },\n      { key: 'smtpUser', label: 'SMTP Username', type: 'text', description: 'SMTP authentication username' },\n      { key: 'smtpPass', label: 'SMTP Password', type: 'text', description: 'SMTP authentication password' },\n      { key: 'fromEmail', label: 'From Email', type: 'text', description: 'Sender email address' },\n      { key: 'fromName', label: 'From Name', type: 'text', description: 'Sender display name' }\n    ]\n  },\n  {\n    key: 'app',\n    title: 'App Settings',\n    description: 'Configure app-wide settings and features',\n    isPublic: true,\n    fields: [\n      { key: 'maintenanceMode', label: 'Maintenance Mode', type: 'boolean', description: 'Enable maintenance mode' },\n      { key: 'maintenanceMessage', label: 'Maintenance Message', type: 'text', description: 'Message shown during maintenance' },\n      { key: 'appVersion', label: 'App Version', type: 'text', description: 'Current app version' },\n      { key: 'minAppVersion', label: 'Minimum App Version', type: 'text', description: 'Minimum required app version' },\n      { key: 'forceUpdate', label: 'Force Update', type: 'boolean', description: 'Force users to update app' },\n      { key: 'updateMessage', label: 'Update Message', type: 'text', description: 'Message shown for forced updates' }\n    ]\n  }\n];\n\nconst Config: React.FC = () => {\n  const [configs, setConfigs] = useState<Record<string, any>>({});\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState<Record<string, boolean>>({});\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  useEffect(() => {\n    loadConfigs();\n  }, []);\n\n  const loadConfigs = async () => {\n    try {\n      setLoading(true);\n      const configPromises = CONFIG_SECTIONS.map(section => \n        configApi.getConfig(section.key).catch(() => ({ value: {} }))\n      );\n      \n      const results = await Promise.all(configPromises);\n      const configData: Record<string, any> = {};\n      \n      CONFIG_SECTIONS.forEach((section, index) => {\n        configData[section.key] = results[index]?.value || {};\n      });\n      \n      setConfigs(configData);\n    } catch (error) {\n      console.error('Error loading configs:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateConfigValue = (sectionKey: string, fieldKey: string, value: any) => {\n    setConfigs(prev => ({\n      ...prev,\n      [sectionKey]: {\n        ...prev[sectionKey],\n        [fieldKey]: value\n      }\n    }));\n  };\n\n  const saveConfig = async (sectionKey: string) => {\n    try {\n      setSaving(prev => ({ ...prev, [sectionKey]: true }));\n      setErrors(prev => ({ ...prev, [sectionKey]: '' }));\n      \n      await configApi.updateConfig(sectionKey, configs[sectionKey]);\n      \n      // Show success message\n      const section = CONFIG_SECTIONS.find(s => s.key === sectionKey);\n      alert(`${section?.title} updated successfully!`);\n    } catch (error) {\n      console.error('Error saving config:', error);\n      setErrors(prev => ({ \n        ...prev, \n        [sectionKey]: 'Failed to save configuration. Please try again.' \n      }));\n    } finally {\n      setSaving(prev => ({ ...prev, [sectionKey]: false }));\n    }\n  };\n\n  const saveAllConfigs = async () => {\n    try {\n      setSaving(prev => ({ ...prev, all: true }));\n      setErrors(prev => ({ ...prev, all: '' }));\n      \n      const savePromises = CONFIG_SECTIONS.map(section => \n        configApi.updateConfig(section.key, configs[section.key])\n      );\n      \n      await Promise.all(savePromises);\n      \n      alert('All configurations saved successfully!');\n    } catch (error) {\n      console.error('Error saving all configs:', error);\n      setErrors(prev => ({ \n        ...prev, \n        all: 'Failed to save some configurations. Please try again.' \n      }));\n    } finally {\n      setSaving(prev => ({ ...prev, all: false }));\n    }\n  };\n\n  const resetToDefaults = async () => {\n    if (!confirm('Are you sure you want to reset all configurations to default values? This action cannot be undone.')) {\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      // This would typically call an API endpoint to reset configs\n      // For now, we'll just reload the configs\n      await loadConfigs();\n      alert('Configurations reset to defaults!');\n    } catch (error) {\n      console.error('Error resetting configs:', error);\n      alert('Failed to reset configurations. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const renderField = (sectionKey: string, field: ConfigField) => {\n    const value = configs[sectionKey]?.[field.key];\n    \n    switch (field.type) {\n      case 'number':\n        return (\n          <input\n            type=\"number\"\n            value={value || ''}\n            onChange={(e) => updateConfigValue(sectionKey, field.key, parseFloat(e.target.value) || 0)}\n            min={field.min}\n            max={field.max}\n            step={field.step || 1}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n        );\n      \n      case 'boolean':\n        return (\n          <select\n            value={value?.toString() || 'false'}\n            onChange={(e) => updateConfigValue(sectionKey, field.key, e.target.value === 'true')}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            <option value=\"true\">Enabled</option>\n            <option value=\"false\">Disabled</option>\n          </select>\n        );\n      \n      default:\n        return (\n          <input\n            type=\"text\"\n            value={value || ''}\n            onChange={(e) => updateConfigValue(sectionKey, field.key, e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n        );\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"mb-6\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Configuration</h1>\n        <p className=\"text-gray-600\">Manage game settings, rewards, and security configurations</p>\n      </div>\n\n      <div className=\"space-y-6\">\n        {CONFIG_SECTIONS.map((section) => (\n          <div key={section.key} className=\"bg-white rounded-lg shadow-md p-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <div>\n                <h2 className=\"text-xl font-semibold text-gray-900\">{section.title}</h2>\n                <p className=\"text-gray-600 text-sm\">{section.description}</p>\n                <span className={`inline-block px-2 py-1 text-xs rounded-full mt-2 ${\n                  section.isPublic \n                    ? 'bg-green-100 text-green-800' \n                    : 'bg-red-100 text-red-800'\n                }`}>\n                  {section.isPublic ? 'Public' : 'Private'}\n                </span>\n              </div>\n              <button\n                onClick={() => saveConfig(section.key)}\n                disabled={saving[section.key]}\n                className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {saving[section.key] ? 'Saving...' : 'Save Changes'}\n              </button>\n            </div>\n\n            {errors[section.key] && (\n              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\n                {errors[section.key]}\n              </div>\n            )}\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {section.fields.map((field) => (\n                <div key={field.key} className=\"space-y-2\">\n                  <label className=\"block text-sm font-medium text-gray-700\">\n                    {field.label}\n                  </label>\n                  {renderField(section.key, field)}\n                  {field.description && (\n                    <p className=\"text-xs text-gray-500\">{field.description}</p>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"mt-8 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n        <h3 className=\"text-lg font-semibold text-blue-900 mb-2\">Configuration Notes</h3>\n        <ul className=\"text-sm text-blue-800 space-y-1\">\n          <li>• <strong>Public</strong> configurations are visible to users and affect game behavior</li>\n          <li>• <strong>Private</strong> configurations are for internal use and security</li>\n          <li>• Changes take effect immediately after saving</li>\n          <li>• Be careful with security settings to prevent abuse</li>\n          <li>• Wheel weights determine the probability of each spin outcome</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Config;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAoB5C,MAAMC,eAAgC,GAAG,CACvC;EACEC,GAAG,EAAE,SAAS;EACdC,KAAK,EAAE,uBAAuB;EAC9BC,WAAW,EAAE,+CAA+C;EAC5DC,QAAQ,EAAE,IAAI;EACdC,MAAM,EAAE,CACN;IAAEJ,GAAG,EAAE,WAAW;IAAEK,KAAK,EAAE,kBAAkB;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,qBAAqB;IAAEK,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAI,CAAC,EACrH;IAAER,GAAG,EAAE,UAAU;IAAEK,KAAK,EAAE,qBAAqB;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,wBAAwB;IAAEK,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAG,CAAC,EACzH;IAAER,GAAG,EAAE,UAAU;IAAEK,KAAK,EAAE,qBAAqB;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,wBAAwB;IAAEK,GAAG,EAAE,EAAE;IAAEC,GAAG,EAAE;EAAK,CAAC,EAC5H;IAAER,GAAG,EAAE,SAAS;IAAEK,KAAK,EAAE,gBAAgB;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,sBAAsB;IAAEK,GAAG,EAAE,GAAG;IAAEC,GAAG,EAAE;EAAM,CAAC,EACtH;IAAER,GAAG,EAAE,kBAAkB;IAAEK,KAAK,EAAE,gBAAgB;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,6BAA6B;IAAEK,GAAG,EAAE,EAAE;IAAEC,GAAG,EAAE;EAAI,CAAC,EACnI;IAAER,GAAG,EAAE,kBAAkB;IAAEK,KAAK,EAAE,eAAe;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,0BAA0B;IAAEK,GAAG,EAAE,EAAE;IAAEC,GAAG,EAAE;EAAI,CAAC,EAC/H;IAAER,GAAG,EAAE,4BAA4B;IAAEK,KAAK,EAAE,qBAAqB;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,uCAAuC;IAAEK,GAAG,EAAE,EAAE;IAAEC,GAAG,EAAE;EAAK,CAAC;AAEjK,CAAC,EACD;EACER,GAAG,EAAE,SAAS;EACdC,KAAK,EAAE,gBAAgB;EACvBC,WAAW,EAAE,gDAAgD;EAC7DC,QAAQ,EAAE,IAAI;EACdC,MAAM,EAAE,CACN;IAAEJ,GAAG,EAAE,iBAAiB;IAAEK,KAAK,EAAE,yBAAyB;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,+BAA+B;IAAEK,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAI,CAAC,EACrJ;IAAET,GAAG,EAAE,eAAe;IAAEK,KAAK,EAAE,qBAAqB;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,+BAA+B;IAAEK,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAI,CAAC,EACtI;IAAER,GAAG,EAAE,WAAW;IAAEK,KAAK,EAAE,aAAa;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,8BAA8B;IAAEK,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAI,CAAC,EACzH;IAAER,GAAG,EAAE,WAAW;IAAEK,KAAK,EAAE,aAAa;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,8BAA8B;IAAEK,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAI,CAAC,EACzH;IAAER,GAAG,EAAE,WAAW;IAAEK,KAAK,EAAE,aAAa;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,8BAA8B;IAAEK,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAI,CAAC,EACzH;IAAER,GAAG,EAAE,YAAY;IAAEK,KAAK,EAAE,cAAc;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,+BAA+B;IAAEK,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAK,CAAC;AAEjI,CAAC,EACD;EACER,GAAG,EAAE,MAAM;EACXC,KAAK,EAAE,qBAAqB;EAC5BC,WAAW,EAAE,yCAAyC;EACtDC,QAAQ,EAAE,IAAI;EACdC,MAAM,EAAE,CACN;IAAEJ,GAAG,EAAE,gBAAgB;IAAEK,KAAK,EAAE,mBAAmB;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,+BAA+B;IAAEK,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAI,CAAC,EACrI;IAAER,GAAG,EAAE,wBAAwB;IAAEK,KAAK,EAAE,2BAA2B;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,4BAA4B;IAAEK,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAI,CAAC,EAClJ;IAAER,GAAG,EAAE,mBAAmB;IAAEK,KAAK,EAAE,4BAA4B;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,gCAAgC;IAAEK,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAI,CAAC,EAClJ;IAAER,GAAG,EAAE,cAAc;IAAEK,KAAK,EAAE,gBAAgB;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,8BAA8B;IAAEK,GAAG,EAAE,GAAG;IAAEC,GAAG,EAAE;EAAK,CAAC;AAEtI,CAAC,EACD;EACER,GAAG,EAAE,cAAc;EACnBC,KAAK,EAAE,oBAAoB;EAC3BC,WAAW,EAAE,uDAAuD;EACpEC,QAAQ,EAAE,KAAK;EACfC,MAAM,EAAE,CACN;IAAEJ,GAAG,EAAE,GAAG;IAAEK,KAAK,EAAE,gBAAgB;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,gCAAgC;IAAEK,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAI,CAAC,EACtH;IAAER,GAAG,EAAE,GAAG;IAAEK,KAAK,EAAE,gBAAgB;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,gCAAgC;IAAEK,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAI,CAAC,EACtH;IAAER,GAAG,EAAE,IAAI;IAAEK,KAAK,EAAE,iBAAiB;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,iCAAiC;IAAEK,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAI,CAAC,EACzH;IAAER,GAAG,EAAE,IAAI;IAAEK,KAAK,EAAE,iBAAiB;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,iCAAiC;IAAEK,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAI,CAAC,EACzH;IAAER,GAAG,EAAE,IAAI;IAAEK,KAAK,EAAE,iBAAiB;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,iCAAiC;IAAEK,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAI,CAAC,EACzH;IAAER,GAAG,EAAE,SAAS;IAAEK,KAAK,EAAE,gBAAgB;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,gCAAgC;IAAEK,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAG,CAAC,EAC3H;IAAER,GAAG,EAAE,WAAW;IAAEK,KAAK,EAAE,mBAAmB;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,mCAAmC;IAAEK,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAG,CAAC,EACnI;IAAER,GAAG,EAAE,UAAU;IAAEK,KAAK,EAAE,kBAAkB;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,kCAAkC;IAAEK,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAG,CAAC;AAEpI,CAAC,EACD;EACER,GAAG,EAAE,aAAa;EAClBC,KAAK,EAAE,qBAAqB;EAC5BC,WAAW,EAAE,sCAAsC;EACnDC,QAAQ,EAAE,IAAI;EACdC,MAAM,EAAE,CACN;IAAEJ,GAAG,EAAE,KAAK;IAAEK,KAAK,EAAE,oBAAoB;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,8BAA8B;IAAEK,GAAG,EAAE,GAAG;IAAEC,GAAG,EAAE;EAAM,CAAC,EAC9H;IAAER,GAAG,EAAE,KAAK;IAAEK,KAAK,EAAE,oBAAoB;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,gCAAgC;IAAEK,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAI,CAAC,EACtI;IAAET,GAAG,EAAE,eAAe;IAAEK,KAAK,EAAE,gBAAgB;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,2BAA2B;IAAEK,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAI,CAAC,EAC7H;IAAER,GAAG,EAAE,WAAW;IAAEK,KAAK,EAAE,yBAAyB;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,qCAAqC;IAAEK,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAG,CAAC,EAC3I;IAAER,GAAG,EAAE,kBAAkB;IAAEK,KAAK,EAAE,oBAAoB;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,4CAA4C;IAAEK,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAK,CAAC;AAE1J,CAAC,EACD;EACER,GAAG,EAAE,UAAU;EACfC,KAAK,EAAE,mBAAmB;EAC1BC,WAAW,EAAE,4CAA4C;EACzDC,QAAQ,EAAE,KAAK;EACfC,MAAM,EAAE,CACN;IAAEJ,GAAG,EAAE,gBAAgB;IAAEK,KAAK,EAAE,iBAAiB;IAAEC,IAAI,EAAE,SAAS;IAAEJ,WAAW,EAAE;EAA2B,CAAC,EAC7G;IAAEF,GAAG,EAAE,eAAe;IAAEK,KAAK,EAAE,uBAAuB;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,sCAAsC;IAAEK,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAI,CAAC,EACxJ;IAAET,GAAG,EAAE,qBAAqB;IAAEK,KAAK,EAAE,0BAA0B;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,oCAAoC;IAAEK,GAAG,EAAE,GAAG;IAAEC,GAAG,EAAE;EAAM,CAAC,EAC1J;IAAER,GAAG,EAAE,qBAAqB;IAAEK,KAAK,EAAE,wBAAwB;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,iCAAiC;IAAEK,GAAG,EAAE,EAAE;IAAEC,GAAG,EAAE;EAAK,CAAC,EACnJ;IAAER,GAAG,EAAE,mBAAmB;IAAEK,KAAK,EAAE,sBAAsB;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,kCAAkC;IAAEK,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAG,CAAC,EAC7I;IAAER,GAAG,EAAE,uBAAuB;IAAEK,KAAK,EAAE,yBAAyB;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,gCAAgC;IAAEK,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAI,CAAC;AAEvJ,CAAC,EACD;EACER,GAAG,EAAE,OAAO;EACZC,KAAK,EAAE,gBAAgB;EACvBC,WAAW,EAAE,+CAA+C;EAC5DC,QAAQ,EAAE,KAAK;EACfC,MAAM,EAAE,CACN;IAAEJ,GAAG,EAAE,SAAS;IAAEK,KAAK,EAAE,uBAAuB;IAAEC,IAAI,EAAE,SAAS;IAAEJ,WAAW,EAAE;EAA6C,CAAC,EAC9H;IAAEF,GAAG,EAAE,UAAU;IAAEK,KAAK,EAAE,WAAW;IAAEC,IAAI,EAAE,MAAM;IAAEJ,WAAW,EAAE;EAAuB,CAAC,EAC1F;IAAEF,GAAG,EAAE,UAAU;IAAEK,KAAK,EAAE,WAAW;IAAEC,IAAI,EAAE,QAAQ;IAAEJ,WAAW,EAAE,kBAAkB;IAAEK,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAM,CAAC,EAC5G;IAAER,GAAG,EAAE,UAAU;IAAEK,KAAK,EAAE,eAAe;IAAEC,IAAI,EAAE,MAAM;IAAEJ,WAAW,EAAE;EAA+B,CAAC,EACtG;IAAEF,GAAG,EAAE,UAAU;IAAEK,KAAK,EAAE,eAAe;IAAEC,IAAI,EAAE,MAAM;IAAEJ,WAAW,EAAE;EAA+B,CAAC,EACtG;IAAEF,GAAG,EAAE,WAAW;IAAEK,KAAK,EAAE,YAAY;IAAEC,IAAI,EAAE,MAAM;IAAEJ,WAAW,EAAE;EAAuB,CAAC,EAC5F;IAAEF,GAAG,EAAE,UAAU;IAAEK,KAAK,EAAE,WAAW;IAAEC,IAAI,EAAE,MAAM;IAAEJ,WAAW,EAAE;EAAsB,CAAC;AAE7F,CAAC,EACD;EACEF,GAAG,EAAE,KAAK;EACVC,KAAK,EAAE,cAAc;EACrBC,WAAW,EAAE,0CAA0C;EACvDC,QAAQ,EAAE,IAAI;EACdC,MAAM,EAAE,CACN;IAAEJ,GAAG,EAAE,iBAAiB;IAAEK,KAAK,EAAE,kBAAkB;IAAEC,IAAI,EAAE,SAAS;IAAEJ,WAAW,EAAE;EAA0B,CAAC,EAC9G;IAAEF,GAAG,EAAE,oBAAoB;IAAEK,KAAK,EAAE,qBAAqB;IAAEC,IAAI,EAAE,MAAM;IAAEJ,WAAW,EAAE;EAAmC,CAAC,EAC1H;IAAEF,GAAG,EAAE,YAAY;IAAEK,KAAK,EAAE,aAAa;IAAEC,IAAI,EAAE,MAAM;IAAEJ,WAAW,EAAE;EAAsB,CAAC,EAC7F;IAAEF,GAAG,EAAE,eAAe;IAAEK,KAAK,EAAE,qBAAqB;IAAEC,IAAI,EAAE,MAAM;IAAEJ,WAAW,EAAE;EAA+B,CAAC,EACjH;IAAEF,GAAG,EAAE,aAAa;IAAEK,KAAK,EAAE,cAAc;IAAEC,IAAI,EAAE,SAAS;IAAEJ,WAAW,EAAE;EAA4B,CAAC,EACxG;IAAEF,GAAG,EAAE,eAAe;IAAEK,KAAK,EAAE,gBAAgB;IAAEC,IAAI,EAAE,MAAM;IAAEJ,WAAW,EAAE;EAAmC,CAAC;AAEpH,CAAC,CACF;AAED,MAAMQ,MAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAsB,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACsB,MAAM,EAAEC,SAAS,CAAC,GAAGvB,QAAQ,CAA0B,CAAC,CAAC,CAAC;EACjE,MAAM,CAACwB,MAAM,EAAEC,SAAS,CAAC,GAAGzB,QAAQ,CAAyB,CAAC,CAAC,CAAC;EAEhEC,SAAS,CAAC,MAAM;IACdyB,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACFL,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMM,cAAc,GAAGtB,eAAe,CAACuB,GAAG,CAACC,OAAO,IAChD3B,SAAS,CAAC4B,SAAS,CAACD,OAAO,CAACvB,GAAG,CAAC,CAACyB,KAAK,CAAC,OAAO;QAAEC,KAAK,EAAE,CAAC;MAAE,CAAC,CAAC,CAC9D,CAAC;MAED,MAAMC,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACR,cAAc,CAAC;MACjD,MAAMS,UAA+B,GAAG,CAAC,CAAC;MAE1C/B,eAAe,CAACgC,OAAO,CAAC,CAACR,OAAO,EAAES,KAAK,KAAK;QAAA,IAAAC,cAAA;QAC1CH,UAAU,CAACP,OAAO,CAACvB,GAAG,CAAC,GAAG,EAAAiC,cAAA,GAAAN,OAAO,CAACK,KAAK,CAAC,cAAAC,cAAA,uBAAdA,cAAA,CAAgBP,KAAK,KAAI,CAAC,CAAC;MACvD,CAAC,CAAC;MAEFb,UAAU,CAACiB,UAAU,CAAC;IACxB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,SAAS;MACRnB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMqB,iBAAiB,GAAGA,CAACC,UAAkB,EAAEC,QAAgB,EAAEZ,KAAU,KAAK;IAC9Eb,UAAU,CAAC0B,IAAI,KAAK;MAClB,GAAGA,IAAI;MACP,CAACF,UAAU,GAAG;QACZ,GAAGE,IAAI,CAACF,UAAU,CAAC;QACnB,CAACC,QAAQ,GAAGZ;MACd;IACF,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMc,UAAU,GAAG,MAAOH,UAAkB,IAAK;IAC/C,IAAI;MACFpB,SAAS,CAACsB,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAACF,UAAU,GAAG;MAAK,CAAC,CAAC,CAAC;MACpDlB,SAAS,CAACoB,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAACF,UAAU,GAAG;MAAG,CAAC,CAAC,CAAC;MAElD,MAAMzC,SAAS,CAAC6C,YAAY,CAACJ,UAAU,EAAEzB,OAAO,CAACyB,UAAU,CAAC,CAAC;;MAE7D;MACA,MAAMd,OAAO,GAAGxB,eAAe,CAAC2C,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC3C,GAAG,KAAKqC,UAAU,CAAC;MAC/DO,KAAK,CAAC,GAAGrB,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEtB,KAAK,wBAAwB,CAAC;IAClD,CAAC,CAAC,OAAOiC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5Cf,SAAS,CAACoB,IAAI,KAAK;QACjB,GAAGA,IAAI;QACP,CAACF,UAAU,GAAG;MAChB,CAAC,CAAC,CAAC;IACL,CAAC,SAAS;MACRpB,SAAS,CAACsB,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAACF,UAAU,GAAG;MAAM,CAAC,CAAC,CAAC;IACvD;EACF,CAAC;EAED,MAAMQ,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF5B,SAAS,CAACsB,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAEV,GAAG,EAAE;MAAK,CAAC,CAAC,CAAC;MAC3CV,SAAS,CAACoB,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAEV,GAAG,EAAE;MAAG,CAAC,CAAC,CAAC;MAEzC,MAAMiB,YAAY,GAAG/C,eAAe,CAACuB,GAAG,CAACC,OAAO,IAC9C3B,SAAS,CAAC6C,YAAY,CAAClB,OAAO,CAACvB,GAAG,EAAEY,OAAO,CAACW,OAAO,CAACvB,GAAG,CAAC,CAC1D,CAAC;MAED,MAAM4B,OAAO,CAACC,GAAG,CAACiB,YAAY,CAAC;MAE/BF,KAAK,CAAC,wCAAwC,CAAC;IACjD,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDf,SAAS,CAACoB,IAAI,KAAK;QACjB,GAAGA,IAAI;QACPV,GAAG,EAAE;MACP,CAAC,CAAC,CAAC;IACL,CAAC,SAAS;MACRZ,SAAS,CAACsB,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAEV,GAAG,EAAE;MAAM,CAAC,CAAC,CAAC;IAC9C;EACF,CAAC;EAED,MAAMkB,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAACC,OAAO,CAAC,oGAAoG,CAAC,EAAE;MAClH;IACF;IAEA,IAAI;MACFjC,UAAU,CAAC,IAAI,CAAC;MAChB;MACA;MACA,MAAMK,WAAW,CAAC,CAAC;MACnBwB,KAAK,CAAC,mCAAmC,CAAC;IAC5C,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDU,KAAK,CAAC,mDAAmD,CAAC;IAC5D,CAAC,SAAS;MACR7B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMkC,WAAW,GAAGA,CAACZ,UAAkB,EAAEa,KAAkB,KAAK;IAAA,IAAAC,mBAAA;IAC9D,MAAMzB,KAAK,IAAAyB,mBAAA,GAAGvC,OAAO,CAACyB,UAAU,CAAC,cAAAc,mBAAA,uBAAnBA,mBAAA,CAAsBD,KAAK,CAAClD,GAAG,CAAC;IAE9C,QAAQkD,KAAK,CAAC5C,IAAI;MAChB,KAAK,QAAQ;QACX,oBACER,OAAA;UACEQ,IAAI,EAAC,QAAQ;UACboB,KAAK,EAAEA,KAAK,IAAI,EAAG;UACnB0B,QAAQ,EAAGC,CAAC,IAAKjB,iBAAiB,CAACC,UAAU,EAAEa,KAAK,CAAClD,GAAG,EAAEsD,UAAU,CAACD,CAAC,CAACE,MAAM,CAAC7B,KAAK,CAAC,IAAI,CAAC,CAAE;UAC3FnB,GAAG,EAAE2C,KAAK,CAAC3C,GAAI;UACfC,GAAG,EAAE0C,KAAK,CAAC1C,GAAI;UACfC,IAAI,EAAEyC,KAAK,CAACzC,IAAI,IAAI,CAAE;UACtB+C,SAAS,EAAC;QAAwG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnH,CAAC;MAGN,KAAK,SAAS;QACZ,oBACE9D,OAAA;UACE4B,KAAK,EAAE,CAAAA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEmC,QAAQ,CAAC,CAAC,KAAI,OAAQ;UACpCT,QAAQ,EAAGC,CAAC,IAAKjB,iBAAiB,CAACC,UAAU,EAAEa,KAAK,CAAClD,GAAG,EAAEqD,CAAC,CAACE,MAAM,CAAC7B,KAAK,KAAK,MAAM,CAAE;UACrF8B,SAAS,EAAC,wGAAwG;UAAAM,QAAA,gBAElHhE,OAAA;YAAQ4B,KAAK,EAAC,MAAM;YAAAoC,QAAA,EAAC;UAAO;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACrC9D,OAAA;YAAQ4B,KAAK,EAAC,OAAO;YAAAoC,QAAA,EAAC;UAAQ;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC;MAGb;QACE,oBACE9D,OAAA;UACEQ,IAAI,EAAC,MAAM;UACXoB,KAAK,EAAEA,KAAK,IAAI,EAAG;UACnB0B,QAAQ,EAAGC,CAAC,IAAKjB,iBAAiB,CAACC,UAAU,EAAEa,KAAK,CAAClD,GAAG,EAAEqD,CAAC,CAACE,MAAM,CAAC7B,KAAK,CAAE;UAC1E8B,SAAS,EAAC;QAAwG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnH,CAAC;IAER;EACF,CAAC;EAED,IAAI9C,OAAO,EAAE;IACX,oBACEhB,OAAA;MAAK0D,SAAS,EAAC,uCAAuC;MAAAM,QAAA,eACpDhE,OAAA;QAAK0D,SAAS,EAAC;MAAgE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF,CAAC;EAEV;EAEA,oBACE9D,OAAA;IAAK0D,SAAS,EAAC,KAAK;IAAAM,QAAA,gBAClBhE,OAAA;MAAK0D,SAAS,EAAC,MAAM;MAAAM,QAAA,gBACnBhE,OAAA;QAAI0D,SAAS,EAAC,uCAAuC;QAAAM,QAAA,EAAC;MAAa;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxE9D,OAAA;QAAG0D,SAAS,EAAC,eAAe;QAAAM,QAAA,EAAC;MAA0D;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxF,CAAC,eAEN9D,OAAA;MAAK0D,SAAS,EAAC,WAAW;MAAAM,QAAA,EACvB/D,eAAe,CAACuB,GAAG,CAAEC,OAAO,iBAC3BzB,OAAA;QAAuB0D,SAAS,EAAC,mCAAmC;QAAAM,QAAA,gBAClEhE,OAAA;UAAK0D,SAAS,EAAC,wCAAwC;UAAAM,QAAA,gBACrDhE,OAAA;YAAAgE,QAAA,gBACEhE,OAAA;cAAI0D,SAAS,EAAC,qCAAqC;cAAAM,QAAA,EAAEvC,OAAO,CAACtB;YAAK;cAAAwD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxE9D,OAAA;cAAG0D,SAAS,EAAC,uBAAuB;cAAAM,QAAA,EAAEvC,OAAO,CAACrB;YAAW;cAAAuD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC9D9D,OAAA;cAAM0D,SAAS,EAAE,oDACfjC,OAAO,CAACpB,QAAQ,GACZ,6BAA6B,GAC7B,yBAAyB,EAC5B;cAAA2D,QAAA,EACAvC,OAAO,CAACpB,QAAQ,GAAG,QAAQ,GAAG;YAAS;cAAAsD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACN9D,OAAA;YACEiE,OAAO,EAAEA,CAAA,KAAMvB,UAAU,CAACjB,OAAO,CAACvB,GAAG,CAAE;YACvCgE,QAAQ,EAAEhD,MAAM,CAACO,OAAO,CAACvB,GAAG,CAAE;YAC9BwD,SAAS,EAAC,+GAA+G;YAAAM,QAAA,EAExH9C,MAAM,CAACO,OAAO,CAACvB,GAAG,CAAC,GAAG,WAAW,GAAG;UAAc;YAAAyD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,EAEL1C,MAAM,CAACK,OAAO,CAACvB,GAAG,CAAC,iBAClBF,OAAA;UAAK0D,SAAS,EAAC,gEAAgE;UAAAM,QAAA,EAC5E5C,MAAM,CAACK,OAAO,CAACvB,GAAG;QAAC;UAAAyD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CACN,eAED9D,OAAA;UAAK0D,SAAS,EAAC,uCAAuC;UAAAM,QAAA,EACnDvC,OAAO,CAACnB,MAAM,CAACkB,GAAG,CAAE4B,KAAK,iBACxBpD,OAAA;YAAqB0D,SAAS,EAAC,WAAW;YAAAM,QAAA,gBACxChE,OAAA;cAAO0D,SAAS,EAAC,yCAAyC;cAAAM,QAAA,EACvDZ,KAAK,CAAC7C;YAAK;cAAAoD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC,EACPX,WAAW,CAAC1B,OAAO,CAACvB,GAAG,EAAEkD,KAAK,CAAC,EAC/BA,KAAK,CAAChD,WAAW,iBAChBJ,OAAA;cAAG0D,SAAS,EAAC,uBAAuB;cAAAM,QAAA,EAAEZ,KAAK,CAAChD;YAAW;cAAAuD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAC5D;UAAA,GAPOV,KAAK,CAAClD,GAAG;YAAAyD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAQd,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,GAxCErC,OAAO,CAACvB,GAAG;QAAAyD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAyChB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN9D,OAAA;MAAK0D,SAAS,EAAC,uDAAuD;MAAAM,QAAA,gBACpEhE,OAAA;QAAI0D,SAAS,EAAC,0CAA0C;QAAAM,QAAA,EAAC;MAAmB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjF9D,OAAA;QAAI0D,SAAS,EAAC,iCAAiC;QAAAM,QAAA,gBAC7ChE,OAAA;UAAAgE,QAAA,GAAI,SAAE,eAAAhE,OAAA;YAAAgE,QAAA,EAAQ;UAAM;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,iEAA6D;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/F9D,OAAA;UAAAgE,QAAA,GAAI,SAAE,eAAAhE,OAAA;YAAAgE,QAAA,EAAQ;UAAO;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,qDAAiD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpF9D,OAAA;UAAAgE,QAAA,EAAI;QAA8C;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvD9D,OAAA;UAAAgE,QAAA,EAAI;QAAoD;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7D9D,OAAA;UAAAgE,QAAA,EAAI;QAA8D;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjD,EAAA,CA5NID,MAAgB;AAAAuD,EAAA,GAAhBvD,MAAgB;AA8NtB,eAAeA,MAAM;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}