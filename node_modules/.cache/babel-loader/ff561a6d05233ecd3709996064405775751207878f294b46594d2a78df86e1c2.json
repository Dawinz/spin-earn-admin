{"ast":null,"code":"var _jsxFileName = \"/Users/abdulazizgossage/StudioProjects/spin and earn/admin/src/hooks/useAuth.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, createContext, useContext } from 'react';\nimport { authApi } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = localStorage.getItem('accessToken');\n    if (token) {\n      // Verify token and get user info\n      authApi.getProfile().then(userData => {\n        setUser(userData);\n      }).catch(() => {\n        localStorage.removeItem('accessToken');\n        localStorage.removeItem('refreshToken');\n      }).finally(() => {\n        setIsLoading(false);\n      });\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await authApi.login(email, password);\n      localStorage.setItem('accessToken', response.accessToken);\n      localStorage.setItem('refreshToken', response.refreshToken);\n      setUser(response.user);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n    setUser(null);\n  };\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    isLoading,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useState","useEffect","createContext","useContext","authApi","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","isLoading","setIsLoading","token","localStorage","getItem","getProfile","then","userData","catch","removeItem","finally","login","email","password","response","setItem","accessToken","refreshToken","error","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/abdulazizgossage/StudioProjects/spin and earn/admin/src/hooks/useAuth.tsx"],"sourcesContent":["import { useState, useEffect, createContext, useContext } from 'react';\nimport { authApi } from '../services/api';\n\ninterface User {\n  id: string;\n  email: string;\n  roles: string[];\n}\n\ninterface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = localStorage.getItem('accessToken');\n    if (token) {\n      // Verify token and get user info\n      authApi.getProfile()\n        .then(userData => {\n          setUser(userData);\n        })\n        .catch(() => {\n          localStorage.removeItem('accessToken');\n          localStorage.removeItem('refreshToken');\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await authApi.login(email, password);\n      localStorage.setItem('accessToken', response.accessToken);\n      localStorage.setItem('refreshToken', response.refreshToken);\n      setUser(response.user);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n    setUser(null);\n  };\n\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    isLoading,\n    login,\n    logout,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n"],"mappings":";;;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACtE,SAASC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAgB1C,MAAMC,WAAW,gBAAGL,aAAa,CAA8BM,SAAS,CAAC;AAEzE,OAAO,SAASC,YAAYA,CAAC;EAAEC;AAAwC,CAAC,EAAE;EAAAC,EAAA;EACxE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACjD,IAAIF,KAAK,EAAE;MACT;MACAZ,OAAO,CAACe,UAAU,CAAC,CAAC,CACjBC,IAAI,CAACC,QAAQ,IAAI;QAChBR,OAAO,CAACQ,QAAQ,CAAC;MACnB,CAAC,CAAC,CACDC,KAAK,CAAC,MAAM;QACXL,YAAY,CAACM,UAAU,CAAC,aAAa,CAAC;QACtCN,YAAY,CAACM,UAAU,CAAC,cAAc,CAAC;MACzC,CAAC,CAAC,CACDC,OAAO,CAAC,MAAM;QACbT,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC;IACN,CAAC,MAAM;MACLA,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,KAAK,GAAG,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,KAAK;IACvD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMxB,OAAO,CAACqB,KAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC;MACrDV,YAAY,CAACY,OAAO,CAAC,aAAa,EAAED,QAAQ,CAACE,WAAW,CAAC;MACzDb,YAAY,CAACY,OAAO,CAAC,cAAc,EAAED,QAAQ,CAACG,YAAY,CAAC;MAC3DlB,OAAO,CAACe,QAAQ,CAAChB,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBhB,YAAY,CAACM,UAAU,CAAC,aAAa,CAAC;IACtCN,YAAY,CAACM,UAAU,CAAC,cAAc,CAAC;IACvCV,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMqB,KAAK,GAAG;IACZtB,IAAI;IACJuB,eAAe,EAAE,CAAC,CAACvB,IAAI;IACvBE,SAAS;IACTW,KAAK;IACLQ;EACF,CAAC;EAED,oBACE3B,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAxB,QAAA,EAChCA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAAC7B,EAAA,CAvDeF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAyD5B,OAAO,SAASiC,OAAOA,CAAA,EAAG;EAAAC,GAAA;EACxB,MAAMC,OAAO,GAAGzC,UAAU,CAACI,WAAW,CAAC;EACvC,IAAIqC,OAAO,KAAKpC,SAAS,EAAE;IACzB,MAAM,IAAIqC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB;AAACD,GAAA,CANeD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}